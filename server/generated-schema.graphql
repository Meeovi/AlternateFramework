# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateAgreements {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
}

type AggregateApitoken {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
}

type AggregateCategories {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
}

type AggregateContent_type {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
}

type AggregateCustomers {
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
}

type AggregateDashboardgraphql {
  _avg: DashboardgraphqlAvgAggregate
  _count: DashboardgraphqlCountAggregate
  _max: DashboardgraphqlMaxAggregate
  _min: DashboardgraphqlMinAggregate
  _sum: DashboardgraphqlSumAggregate
}

type AggregateDashboardjson {
  _avg: DashboardjsonAvgAggregate
  _count: DashboardjsonCountAggregate
  _max: DashboardjsonMaxAggregate
  _min: DashboardjsonMinAggregate
  _sum: DashboardjsonSumAggregate
}

type AggregateDashboardrestapi {
  _avg: DashboardrestapiAvgAggregate
  _count: DashboardrestapiCountAggregate
  _max: DashboardrestapiMaxAggregate
  _min: DashboardrestapiMinAggregate
  _sum: DashboardrestapiSumAggregate
}

type AggregateDashboards {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
}

type AggregateDashboardslides {
  _avg: DashboardslidesAvgAggregate
  _count: DashboardslidesCountAggregate
  _max: DashboardslidesMaxAggregate
  _min: DashboardslidesMinAggregate
  _sum: DashboardslidesSumAggregate
}

type AggregateDashboardslist {
  _avg: DashboardslistAvgAggregate
  _count: DashboardslistCountAggregate
  _max: DashboardslistMaxAggregate
  _min: DashboardslistMinAggregate
  _sum: DashboardslistSumAggregate
}

type AggregateIntegrations {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
}

type AggregateInternalization {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
}

type AggregateLogIn {
  _avg: LogInAvgAggregate
  _count: LogInCountAggregate
  _max: LogInMaxAggregate
  _min: LogInMinAggregate
  _sum: LogInSumAggregate
}

type AggregateMediamanager {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
}

type AggregatePages {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
}

type AggregatePermissions {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
}

type AggregatePlugins {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
}

type AggregateProviders {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
}

type AggregateRoles {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
}

type AggregateSettings {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
}

type AggregateTags {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
}

type AggregateThemes {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
}

type AggregateUpload_file {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
}

type AggregateUsers {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
}

type AggregateWebhooks {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
}

type Agreements {
  author: String
  created_at: DateTime
  id: BigInt!
  name: String
  type: String
  updated_at: DateTime
}

type AgreementsAvgAggregate {
  id: Float
}

input AgreementsAvgOrderByAggregateInput {
  id: SortOrder
}

type AgreementsCountAggregate {
  _all: Int!
  author: Int!
  created_at: Int!
  id: Int!
  name: Int!
  type: Int!
  updated_at: Int!
}

input AgreementsCountOrderByAggregateInput {
  author: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input AgreementsCreateInput {
  author: String
  created_at: DateTime
  id: BigInt
  name: String
  type: String
  updated_at: DateTime
}

input AgreementsCreateManyInput {
  author: String
  created_at: DateTime
  id: BigInt
  name: String
  type: String
  updated_at: DateTime
}

type AgreementsGroupBy {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
  author: String
  created_at: DateTime
  id: BigInt!
  name: String
  type: String
  updated_at: DateTime
}

type AgreementsMaxAggregate {
  author: String
  created_at: DateTime
  id: BigInt
  name: String
  type: String
  updated_at: DateTime
}

input AgreementsMaxOrderByAggregateInput {
  author: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

type AgreementsMinAggregate {
  author: String
  created_at: DateTime
  id: BigInt
  name: String
  type: String
  updated_at: DateTime
}

input AgreementsMinOrderByAggregateInput {
  author: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum AgreementsOrderByRelevanceFieldEnum {
  author
  name
  type
}

input AgreementsOrderByRelevanceInput {
  fields: [AgreementsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AgreementsOrderByWithAggregationInput {
  _avg: AgreementsAvgOrderByAggregateInput
  _count: AgreementsCountOrderByAggregateInput
  _max: AgreementsMaxOrderByAggregateInput
  _min: AgreementsMinOrderByAggregateInput
  _sum: AgreementsSumOrderByAggregateInput
  author: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input AgreementsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AgreementsOrderByRelevanceInput
  author: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum AgreementsScalarFieldEnum {
  author
  created_at
  id
  name
  type
  updated_at
}

input AgreementsScalarWhereWithAggregatesInput {
  AND: [AgreementsScalarWhereWithAggregatesInput!]
  NOT: [AgreementsScalarWhereWithAggregatesInput!]
  OR: [AgreementsScalarWhereWithAggregatesInput!]
  author: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
}

type AgreementsSumAggregate {
  id: BigInt
}

input AgreementsSumOrderByAggregateInput {
  id: SortOrder
}

input AgreementsUpdateInput {
  author: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input AgreementsUpdateManyMutationInput {
  author: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input AgreementsWhereInput {
  AND: [AgreementsWhereInput!]
  NOT: [AgreementsWhereInput!]
  OR: [AgreementsWhereInput!]
  author: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  type: StringNullableFilter
  updated_at: DateTimeNullableFilter
}

input AgreementsWhereUniqueInput {
  id: BigInt
}

type Apitoken {
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenAvgAggregate {
  id: Float
  token: Float
}

input ApitokenAvgOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

type ApitokenCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  id: Int!
  name: Int!
  token: Int!
  token_type: Int!
}

input ApitokenCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenCreateInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

input ApitokenCreateManyInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenGroupBy {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenMaxAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

type ApitokenMinAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenOrderByRelevanceFieldEnum {
  description
  name
  token_type
}

input ApitokenOrderByRelevanceInput {
  fields: [ApitokenOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ApitokenOrderByWithAggregationInput {
  _avg: ApitokenAvgOrderByAggregateInput
  _count: ApitokenCountOrderByAggregateInput
  _max: ApitokenMaxOrderByAggregateInput
  _min: ApitokenMinOrderByAggregateInput
  _sum: ApitokenSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ApitokenOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenScalarFieldEnum {
  created_at
  description
  id
  name
  token
  token_type
}

input ApitokenScalarWhereWithAggregatesInput {
  AND: [ApitokenScalarWhereWithAggregatesInput!]
  NOT: [ApitokenScalarWhereWithAggregatesInput!]
  OR: [ApitokenScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  token: BigIntWithAggregatesFilter
  token_type: StringNullableWithAggregatesFilter
}

type ApitokenSumAggregate {
  id: BigInt
  token: BigInt
}

input ApitokenSumOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

input ApitokenUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenWhereInput {
  AND: [ApitokenWhereInput!]
  NOT: [ApitokenWhereInput!]
  OR: [ApitokenWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  token: BigIntFilter
  token_type: StringNullableFilter
}

input ApitokenWhereUniqueInput {
  id: BigInt
  name: String
  token: BigInt
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input BigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input BigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input BigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

type Categories {
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesAvgAggregate {
  id: Float
}

input CategoriesAvgOrderByAggregateInput {
  id: SortOrder
}

type CategoriesCountAggregate {
  _all: Int!
  content: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  meta_url: Int!
  name: Int!
  product: Int!
  status: Int!
  thumbnail: Int!
  visibility: Int!
  websites: Int!
  workspaces: Int!
}

input CategoriesCountOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesCreateInput {
  content: String
  country: String
  description: String
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesCreateManyInput {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesGroupBy {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesMaxAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMaxOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

type CategoriesMinAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMinOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesOrderByRelevanceFieldEnum {
  content
  country
  description
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesOrderByRelevanceInput {
  fields: [CategoriesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CategoriesOrderByWithAggregationInput {
  _avg: CategoriesAvgOrderByAggregateInput
  _count: CategoriesCountOrderByAggregateInput
  _max: CategoriesMaxOrderByAggregateInput
  _min: CategoriesMinOrderByAggregateInput
  _sum: CategoriesSumOrderByAggregateInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CategoriesOrderByRelevanceInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesScalarFieldEnum {
  content
  country
  description
  id
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  status
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesScalarWhereWithAggregatesInput {
  AND: [CategoriesScalarWhereWithAggregatesInput!]
  NOT: [CategoriesScalarWhereWithAggregatesInput!]
  OR: [CategoriesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type CategoriesSumAggregate {
  id: Int
}

input CategoriesSumOrderByAggregateInput {
  id: SortOrder
}

input CategoriesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesWhereInput {
  AND: [CategoriesWhereInput!]
  NOT: [CategoriesWhereInput!]
  OR: [CategoriesWhereInput!]
  content: StringNullableFilter
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringFilter
  product: StringNullableFilter
  status: BoolNullableFilter
  thumbnail: StringNullableFilter
  visibility: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
}

input CategoriesWhereUniqueInput {
  id: Int
}

type Content_type {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeAvgAggregate {
  id: Float
  number: Decimal
}

input Content_typeAvgOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

type Content_typeCountAggregate {
  _all: Int!
  boolean: Int!
  created_at: Int!
  database_name: Int!
  date: Int!
  email: Int!
  id: Int!
  json: Int!
  link: Int!
  media: Int!
  number: Int!
  password: Int!
  rich_text: Int!
  text: Int!
  time: Int!
  timestamp: Int!
  uid: Int!
}

input Content_typeCountOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeCreateInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeCreateManyInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeGroupBy {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeMaxAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMaxOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

type Content_typeMinAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMinOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeOrderByRelevanceFieldEnum {
  database_name
  email
  link
  media
  password
  rich_text
  text
  uid
}

input Content_typeOrderByRelevanceInput {
  fields: [Content_typeOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Content_typeOrderByWithAggregationInput {
  _avg: Content_typeAvgOrderByAggregateInput
  _count: Content_typeCountOrderByAggregateInput
  _max: Content_typeMaxOrderByAggregateInput
  _min: Content_typeMinOrderByAggregateInput
  _sum: Content_typeSumOrderByAggregateInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Content_typeOrderByRelevanceInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeScalarFieldEnum {
  boolean
  created_at
  database_name
  date
  email
  id
  json
  link
  media
  number
  password
  rich_text
  text
  time
  timestamp
  uid
}

input Content_typeScalarWhereWithAggregatesInput {
  AND: [Content_typeScalarWhereWithAggregatesInput!]
  NOT: [Content_typeScalarWhereWithAggregatesInput!]
  OR: [Content_typeScalarWhereWithAggregatesInput!]
  boolean: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  database_name: StringNullableWithAggregatesFilter
  date: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  json: JsonNullableWithAggregatesFilter
  link: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  number: DecimalNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  rich_text: StringNullableWithAggregatesFilter
  text: StringNullableWithAggregatesFilter
  time: DateTimeNullableWithAggregatesFilter
  timestamp: DateTimeNullableWithAggregatesFilter
  uid: StringNullableWithAggregatesFilter
}

type Content_typeSumAggregate {
  id: BigInt
  number: Decimal
}

input Content_typeSumOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

input Content_typeUpdateInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeUpdateManyMutationInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeWhereInput {
  AND: [Content_typeWhereInput!]
  NOT: [Content_typeWhereInput!]
  OR: [Content_typeWhereInput!]
  boolean: BoolNullableFilter
  created_at: DateTimeNullableFilter
  database_name: StringNullableFilter
  date: DateTimeNullableFilter
  email: StringNullableFilter
  id: BigIntFilter
  json: JsonNullableFilter
  link: StringNullableFilter
  media: StringNullableFilter
  number: DecimalNullableFilter
  password: StringNullableFilter
  rich_text: StringNullableFilter
  text: StringNullableFilter
  time: DateTimeNullableFilter
  timestamp: DateTimeNullableFilter
  uid: StringNullableFilter
}

input Content_typeWhereUniqueInput {
  id: BigInt
}

type Customers {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersAvgAggregate {
  id: Float
}

input CustomersAvgOrderByAggregateInput {
  id: SortOrder
}

type CustomersCountAggregate {
  Address: Int!
  _all: Int!
  address_two: Int!
  comments: Int!
  confirmed_email: Int!
  country: Int!
  credit_memos: Int!
  customer_group: Int!
  customer_payment: Int!
  customer_since: Int!
  date_of_birth: Int!
  description: Int!
  email: Int!
  emails: Int!
  first_name: Int!
  gender: Int!
  id: Int!
  image: Int!
  last_name: Int!
  mediamanager: Int!
  messages: Int!
  middle_name: Int!
  name_prefix: Int!
  name_suffix: Int!
  newsletter_subscribers: Int!
  orders: Int!
  password: Int!
  payment_type: Int!
  phone: Int!
  product: Int!
  projects: Int!
  quotes: Int!
  returns: Int!
  short_description: Int!
  state: Int!
  tax_vat_number: Int!
  thumbnail: Int!
  username: Int!
  websites: Int!
  workspaces: Int!
  zipcode: Int!
}

input CustomersCountOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersCreateInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersCreateManyInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersGroupBy {
  Address: String
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersMaxAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMaxOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

type CustomersMinAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMinOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersOrderByRelevanceFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  date_of_birth
  description
  email
  emails
  first_name
  gender
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersOrderByRelevanceInput {
  fields: [CustomersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CustomersOrderByWithAggregationInput {
  Address: SortOrder
  _avg: CustomersAvgOrderByAggregateInput
  _count: CustomersCountOrderByAggregateInput
  _max: CustomersMaxOrderByAggregateInput
  _min: CustomersMinOrderByAggregateInput
  _sum: CustomersSumOrderByAggregateInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersOrderByWithRelationAndSearchRelevanceInput {
  Address: SortOrder
  _relevance: CustomersOrderByRelevanceInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersScalarFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  customer_since
  date_of_birth
  description
  email
  emails
  first_name
  gender
  id
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersScalarWhereWithAggregatesInput {
  AND: [CustomersScalarWhereWithAggregatesInput!]
  Address: StringNullableWithAggregatesFilter
  NOT: [CustomersScalarWhereWithAggregatesInput!]
  OR: [CustomersScalarWhereWithAggregatesInput!]
  address_two: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  confirmed_email: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  credit_memos: StringNullableWithAggregatesFilter
  customer_group: StringNullableWithAggregatesFilter
  customer_payment: StringNullableWithAggregatesFilter
  customer_since: DateTimeNullableWithAggregatesFilter
  date_of_birth: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  emails: StringNullableWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  gender: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  last_name: StringWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  messages: StringNullableWithAggregatesFilter
  middle_name: StringNullableWithAggregatesFilter
  name_prefix: StringNullableWithAggregatesFilter
  name_suffix: StringNullableWithAggregatesFilter
  newsletter_subscribers: StringNullableWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  payment_type: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  returns: StringNullableWithAggregatesFilter
  short_description: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tax_vat_number: StringNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type CustomersSumAggregate {
  id: Int
}

input CustomersSumOrderByAggregateInput {
  id: SortOrder
}

input CustomersUpdateInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersUpdateManyMutationInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersWhereInput {
  AND: [CustomersWhereInput!]
  Address: StringNullableFilter
  NOT: [CustomersWhereInput!]
  OR: [CustomersWhereInput!]
  address_two: StringNullableFilter
  comments: StringNullableFilter
  confirmed_email: StringNullableFilter
  country: StringNullableFilter
  credit_memos: StringNullableFilter
  customer_group: StringNullableFilter
  customer_payment: StringNullableFilter
  customer_since: DateTimeNullableFilter
  date_of_birth: StringNullableFilter
  description: StringNullableFilter
  email: StringFilter
  emails: StringNullableFilter
  first_name: StringFilter
  gender: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  last_name: StringFilter
  mediamanager: StringNullableFilter
  messages: StringNullableFilter
  middle_name: StringNullableFilter
  name_prefix: StringNullableFilter
  name_suffix: StringNullableFilter
  newsletter_subscribers: StringNullableFilter
  orders: StringNullableFilter
  password: StringNullableFilter
  payment_type: StringNullableFilter
  phone: StringNullableFilter
  product: StringNullableFilter
  projects: StringNullableFilter
  quotes: StringNullableFilter
  returns: StringNullableFilter
  short_description: StringNullableFilter
  state: StringNullableFilter
  tax_vat_number: StringNullableFilter
  thumbnail: StringNullableFilter
  username: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
  zipcode: StringNullableFilter
}

input CustomersWhereUniqueInput {
  id: Int
}

type Dashboardgraphql {
  description: String
  headerKey: String
  headerValue: String
  id: Int!
  name: String!
  url: String
  urlKey: String
  urlValue: String
}

type DashboardgraphqlAvgAggregate {
  id: Float
}

input DashboardgraphqlAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardgraphqlCountAggregate {
  _all: Int!
  description: Int!
  headerKey: Int!
  headerValue: Int!
  id: Int!
  name: Int!
  url: Int!
  urlKey: Int!
  urlValue: Int!
}

input DashboardgraphqlCountOrderByAggregateInput {
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
  urlKey: SortOrder
  urlValue: SortOrder
}

input DashboardgraphqlCreateInput {
  description: String
  headerKey: String
  headerValue: String
  name: String!
  url: String
  urlKey: String
  urlValue: String
}

input DashboardgraphqlCreateManyInput {
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String!
  url: String
  urlKey: String
  urlValue: String
}

type DashboardgraphqlGroupBy {
  _avg: DashboardgraphqlAvgAggregate
  _count: DashboardgraphqlCountAggregate
  _max: DashboardgraphqlMaxAggregate
  _min: DashboardgraphqlMinAggregate
  _sum: DashboardgraphqlSumAggregate
  description: String
  headerKey: String
  headerValue: String
  id: Int!
  name: String!
  url: String
  urlKey: String
  urlValue: String
}

type DashboardgraphqlMaxAggregate {
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String
  url: String
  urlKey: String
  urlValue: String
}

input DashboardgraphqlMaxOrderByAggregateInput {
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
  urlKey: SortOrder
  urlValue: SortOrder
}

type DashboardgraphqlMinAggregate {
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String
  url: String
  urlKey: String
  urlValue: String
}

input DashboardgraphqlMinOrderByAggregateInput {
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
  urlKey: SortOrder
  urlValue: SortOrder
}

enum DashboardgraphqlOrderByRelevanceFieldEnum {
  description
  headerKey
  headerValue
  name
  url
  urlKey
  urlValue
}

input DashboardgraphqlOrderByRelevanceInput {
  fields: [DashboardgraphqlOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardgraphqlOrderByWithAggregationInput {
  _avg: DashboardgraphqlAvgOrderByAggregateInput
  _count: DashboardgraphqlCountOrderByAggregateInput
  _max: DashboardgraphqlMaxOrderByAggregateInput
  _min: DashboardgraphqlMinOrderByAggregateInput
  _sum: DashboardgraphqlSumOrderByAggregateInput
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
  urlKey: SortOrder
  urlValue: SortOrder
}

input DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardgraphqlOrderByRelevanceInput
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
  urlKey: SortOrder
  urlValue: SortOrder
}

enum DashboardgraphqlScalarFieldEnum {
  description
  headerKey
  headerValue
  id
  name
  url
  urlKey
  urlValue
}

input DashboardgraphqlScalarWhereWithAggregatesInput {
  AND: [DashboardgraphqlScalarWhereWithAggregatesInput!]
  NOT: [DashboardgraphqlScalarWhereWithAggregatesInput!]
  OR: [DashboardgraphqlScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  headerKey: StringNullableWithAggregatesFilter
  headerValue: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  urlKey: StringNullableWithAggregatesFilter
  urlValue: StringNullableWithAggregatesFilter
}

type DashboardgraphqlSumAggregate {
  id: Int
}

input DashboardgraphqlSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardgraphqlUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  headerKey: NullableStringFieldUpdateOperationsInput
  headerValue: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  urlKey: NullableStringFieldUpdateOperationsInput
  urlValue: NullableStringFieldUpdateOperationsInput
}

input DashboardgraphqlUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  headerKey: NullableStringFieldUpdateOperationsInput
  headerValue: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  urlKey: NullableStringFieldUpdateOperationsInput
  urlValue: NullableStringFieldUpdateOperationsInput
}

input DashboardgraphqlWhereInput {
  AND: [DashboardgraphqlWhereInput!]
  NOT: [DashboardgraphqlWhereInput!]
  OR: [DashboardgraphqlWhereInput!]
  description: StringNullableFilter
  headerKey: StringNullableFilter
  headerValue: StringNullableFilter
  id: IntFilter
  name: StringFilter
  url: StringNullableFilter
  urlKey: StringNullableFilter
  urlValue: StringNullableFilter
}

input DashboardgraphqlWhereUniqueInput {
  id: Int
}

type Dashboardjson {
  definition: String
  description: String
  format: String
  id: Int!
  name: String!
  url: String
}

type DashboardjsonAvgAggregate {
  id: Float
}

input DashboardjsonAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardjsonCountAggregate {
  _all: Int!
  definition: Int!
  description: Int!
  format: Int!
  id: Int!
  name: Int!
  url: Int!
}

input DashboardjsonCountOrderByAggregateInput {
  definition: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DashboardjsonCreateInput {
  definition: String
  description: String
  format: String
  name: String!
  url: String
}

input DashboardjsonCreateManyInput {
  definition: String
  description: String
  format: String
  id: Int
  name: String!
  url: String
}

type DashboardjsonGroupBy {
  _avg: DashboardjsonAvgAggregate
  _count: DashboardjsonCountAggregate
  _max: DashboardjsonMaxAggregate
  _min: DashboardjsonMinAggregate
  _sum: DashboardjsonSumAggregate
  definition: String
  description: String
  format: String
  id: Int!
  name: String!
  url: String
}

type DashboardjsonMaxAggregate {
  definition: String
  description: String
  format: String
  id: Int
  name: String
  url: String
}

input DashboardjsonMaxOrderByAggregateInput {
  definition: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

type DashboardjsonMinAggregate {
  definition: String
  description: String
  format: String
  id: Int
  name: String
  url: String
}

input DashboardjsonMinOrderByAggregateInput {
  definition: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

enum DashboardjsonOrderByRelevanceFieldEnum {
  definition
  description
  format
  name
  url
}

input DashboardjsonOrderByRelevanceInput {
  fields: [DashboardjsonOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardjsonOrderByWithAggregationInput {
  _avg: DashboardjsonAvgOrderByAggregateInput
  _count: DashboardjsonCountOrderByAggregateInput
  _max: DashboardjsonMaxOrderByAggregateInput
  _min: DashboardjsonMinOrderByAggregateInput
  _sum: DashboardjsonSumOrderByAggregateInput
  definition: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DashboardjsonOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardjsonOrderByRelevanceInput
  definition: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

enum DashboardjsonScalarFieldEnum {
  definition
  description
  format
  id
  name
  url
}

input DashboardjsonScalarWhereWithAggregatesInput {
  AND: [DashboardjsonScalarWhereWithAggregatesInput!]
  NOT: [DashboardjsonScalarWhereWithAggregatesInput!]
  OR: [DashboardjsonScalarWhereWithAggregatesInput!]
  definition: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  format: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type DashboardjsonSumAggregate {
  id: Int
}

input DashboardjsonSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardjsonUpdateInput {
  definition: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input DashboardjsonUpdateManyMutationInput {
  definition: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input DashboardjsonWhereInput {
  AND: [DashboardjsonWhereInput!]
  NOT: [DashboardjsonWhereInput!]
  OR: [DashboardjsonWhereInput!]
  definition: StringNullableFilter
  description: StringNullableFilter
  format: StringNullableFilter
  id: IntFilter
  name: StringFilter
  url: StringNullableFilter
}

input DashboardjsonWhereUniqueInput {
  id: Int
}

type Dashboardrestapi {
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  id: Int!
  name: String!
  url: String
}

type DashboardrestapiAvgAggregate {
  id: Float
}

input DashboardrestapiAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardrestapiCountAggregate {
  _all: Int!
  authenticationType: Int!
  description: Int!
  headerKey: Int!
  headerValue: Int!
  id: Int!
  name: Int!
  url: Int!
}

input DashboardrestapiCountOrderByAggregateInput {
  authenticationType: SortOrder
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DashboardrestapiCreateInput {
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  name: String!
  url: String
}

input DashboardrestapiCreateManyInput {
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String!
  url: String
}

type DashboardrestapiGroupBy {
  _avg: DashboardrestapiAvgAggregate
  _count: DashboardrestapiCountAggregate
  _max: DashboardrestapiMaxAggregate
  _min: DashboardrestapiMinAggregate
  _sum: DashboardrestapiSumAggregate
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  id: Int!
  name: String!
  url: String
}

type DashboardrestapiMaxAggregate {
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String
  url: String
}

input DashboardrestapiMaxOrderByAggregateInput {
  authenticationType: SortOrder
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

type DashboardrestapiMinAggregate {
  authenticationType: String
  description: String
  headerKey: String
  headerValue: String
  id: Int
  name: String
  url: String
}

input DashboardrestapiMinOrderByAggregateInput {
  authenticationType: SortOrder
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

enum DashboardrestapiOrderByRelevanceFieldEnum {
  authenticationType
  description
  headerKey
  headerValue
  name
  url
}

input DashboardrestapiOrderByRelevanceInput {
  fields: [DashboardrestapiOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardrestapiOrderByWithAggregationInput {
  _avg: DashboardrestapiAvgOrderByAggregateInput
  _count: DashboardrestapiCountOrderByAggregateInput
  _max: DashboardrestapiMaxOrderByAggregateInput
  _min: DashboardrestapiMinOrderByAggregateInput
  _sum: DashboardrestapiSumOrderByAggregateInput
  authenticationType: SortOrder
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

input DashboardrestapiOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardrestapiOrderByRelevanceInput
  authenticationType: SortOrder
  description: SortOrder
  headerKey: SortOrder
  headerValue: SortOrder
  id: SortOrder
  name: SortOrder
  url: SortOrder
}

enum DashboardrestapiScalarFieldEnum {
  authenticationType
  description
  headerKey
  headerValue
  id
  name
  url
}

input DashboardrestapiScalarWhereWithAggregatesInput {
  AND: [DashboardrestapiScalarWhereWithAggregatesInput!]
  NOT: [DashboardrestapiScalarWhereWithAggregatesInput!]
  OR: [DashboardrestapiScalarWhereWithAggregatesInput!]
  authenticationType: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  headerKey: StringNullableWithAggregatesFilter
  headerValue: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type DashboardrestapiSumAggregate {
  id: Int
}

input DashboardrestapiSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardrestapiUpdateInput {
  authenticationType: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  headerKey: NullableStringFieldUpdateOperationsInput
  headerValue: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input DashboardrestapiUpdateManyMutationInput {
  authenticationType: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  headerKey: NullableStringFieldUpdateOperationsInput
  headerValue: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input DashboardrestapiWhereInput {
  AND: [DashboardrestapiWhereInput!]
  NOT: [DashboardrestapiWhereInput!]
  OR: [DashboardrestapiWhereInput!]
  authenticationType: StringNullableFilter
  description: StringNullableFilter
  headerKey: StringNullableFilter
  headerValue: StringNullableFilter
  id: IntFilter
  name: StringFilter
  url: StringNullableFilter
}

input DashboardrestapiWhereUniqueInput {
  id: Int
}

type Dashboards {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsAvgAggregate {
  id: Float
}

input DashboardsAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardsCountAggregate {
  _all: Int!
  articles: Int!
  category: Int!
  checklists: Int!
  client_id: Int!
  client_secret: Int!
  content: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  logo: Int!
  media: Int!
  name: Int!
  privacy: Int!
  products: Int!
  projects: Int!
  published: Int!
  reports: Int!
  sales: Int!
  tasks: Int!
  tickets: Int!
  url: Int!
  users: Int!
  visits: Int!
}

input DashboardsCountOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsCreateInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsCreateManyInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsGroupBy {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsMaxAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMaxOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

type DashboardsMinAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMinOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsOrderByRelevanceFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  customers
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsOrderByRelevanceInput {
  fields: [DashboardsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardsOrderByWithAggregationInput {
  _avg: DashboardsAvgOrderByAggregateInput
  _count: DashboardsCountOrderByAggregateInput
  _max: DashboardsMaxOrderByAggregateInput
  _min: DashboardsMinOrderByAggregateInput
  _sum: DashboardsSumOrderByAggregateInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardsOrderByRelevanceInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsScalarFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  created_at
  customers
  id
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsScalarWhereWithAggregatesInput {
  AND: [DashboardsScalarWhereWithAggregatesInput!]
  NOT: [DashboardsScalarWhereWithAggregatesInput!]
  OR: [DashboardsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  category: StringNullableWithAggregatesFilter
  checklists: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  privacy: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  sales: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  visits: StringNullableWithAggregatesFilter
}

type DashboardsSumAggregate {
  id: BigInt
}

input DashboardsSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsWhereInput {
  AND: [DashboardsWhereInput!]
  NOT: [DashboardsWhereInput!]
  OR: [DashboardsWhereInput!]
  articles: StringNullableFilter
  category: StringNullableFilter
  checklists: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  logo: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  privacy: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  published: StringNullableFilter
  reports: StringNullableFilter
  sales: StringNullableFilter
  tasks: StringNullableFilter
  tickets: StringNullableFilter
  url: StringNullableFilter
  users: StringNullableFilter
  visits: StringNullableFilter
}

input DashboardsWhereUniqueInput {
  id: BigInt
  name: String
}

type Dashboardslides {
  categories: String
  description: String
  id: Int!
  media: String
  name: String!
}

type DashboardslidesAvgAggregate {
  id: Float
}

input DashboardslidesAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardslidesCountAggregate {
  _all: Int!
  categories: Int!
  description: Int!
  id: Int!
  media: Int!
  name: Int!
}

input DashboardslidesCountOrderByAggregateInput {
  categories: SortOrder
  description: SortOrder
  id: SortOrder
  media: SortOrder
  name: SortOrder
}

input DashboardslidesCreateInput {
  categories: String
  description: String
  media: String
  name: String!
}

input DashboardslidesCreateManyInput {
  categories: String
  description: String
  id: Int
  media: String
  name: String!
}

type DashboardslidesGroupBy {
  _avg: DashboardslidesAvgAggregate
  _count: DashboardslidesCountAggregate
  _max: DashboardslidesMaxAggregate
  _min: DashboardslidesMinAggregate
  _sum: DashboardslidesSumAggregate
  categories: String
  description: String
  id: Int!
  media: String
  name: String!
}

type DashboardslidesMaxAggregate {
  categories: String
  description: String
  id: Int
  media: String
  name: String
}

input DashboardslidesMaxOrderByAggregateInput {
  categories: SortOrder
  description: SortOrder
  id: SortOrder
  media: SortOrder
  name: SortOrder
}

type DashboardslidesMinAggregate {
  categories: String
  description: String
  id: Int
  media: String
  name: String
}

input DashboardslidesMinOrderByAggregateInput {
  categories: SortOrder
  description: SortOrder
  id: SortOrder
  media: SortOrder
  name: SortOrder
}

enum DashboardslidesOrderByRelevanceFieldEnum {
  categories
  description
  media
  name
}

input DashboardslidesOrderByRelevanceInput {
  fields: [DashboardslidesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardslidesOrderByWithAggregationInput {
  _avg: DashboardslidesAvgOrderByAggregateInput
  _count: DashboardslidesCountOrderByAggregateInput
  _max: DashboardslidesMaxOrderByAggregateInput
  _min: DashboardslidesMinOrderByAggregateInput
  _sum: DashboardslidesSumOrderByAggregateInput
  categories: SortOrder
  description: SortOrder
  id: SortOrder
  media: SortOrder
  name: SortOrder
}

input DashboardslidesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardslidesOrderByRelevanceInput
  categories: SortOrder
  description: SortOrder
  id: SortOrder
  media: SortOrder
  name: SortOrder
}

enum DashboardslidesScalarFieldEnum {
  categories
  description
  id
  media
  name
}

input DashboardslidesScalarWhereWithAggregatesInput {
  AND: [DashboardslidesScalarWhereWithAggregatesInput!]
  NOT: [DashboardslidesScalarWhereWithAggregatesInput!]
  OR: [DashboardslidesScalarWhereWithAggregatesInput!]
  categories: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
}

type DashboardslidesSumAggregate {
  id: Int
}

input DashboardslidesSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardslidesUpdateInput {
  categories: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input DashboardslidesUpdateManyMutationInput {
  categories: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input DashboardslidesWhereInput {
  AND: [DashboardslidesWhereInput!]
  NOT: [DashboardslidesWhereInput!]
  OR: [DashboardslidesWhereInput!]
  categories: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  media: StringNullableFilter
  name: StringFilter
}

input DashboardslidesWhereUniqueInput {
  id: Int
}

type Dashboardslist {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardslistAvgAggregate {
  id: Float
}

input DashboardslistAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardslistCountAggregate {
  _all: Int!
  articles: Int!
  category: Int!
  checklists: Int!
  client_id: Int!
  client_secret: Int!
  content: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  logo: Int!
  media: Int!
  name: Int!
  privacy: Int!
  products: Int!
  projects: Int!
  published: Int!
  reports: Int!
  sales: Int!
  tasks: Int!
  tickets: Int!
  url: Int!
  users: Int!
  visits: Int!
}

input DashboardslistCountOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardslistCreateInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardslistCreateManyInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardslistGroupBy {
  _avg: DashboardslistAvgAggregate
  _count: DashboardslistCountAggregate
  _max: DashboardslistMaxAggregate
  _min: DashboardslistMinAggregate
  _sum: DashboardslistSumAggregate
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardslistMaxAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardslistMaxOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

type DashboardslistMinAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardslistMinOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardslistOrderByRelevanceFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  customers
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardslistOrderByRelevanceInput {
  fields: [DashboardslistOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardslistOrderByWithAggregationInput {
  _avg: DashboardslistAvgOrderByAggregateInput
  _count: DashboardslistCountOrderByAggregateInput
  _max: DashboardslistMaxOrderByAggregateInput
  _min: DashboardslistMinOrderByAggregateInput
  _sum: DashboardslistSumOrderByAggregateInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardslistOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardslistOrderByRelevanceInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardslistScalarFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  created_at
  customers
  id
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardslistScalarWhereWithAggregatesInput {
  AND: [DashboardslistScalarWhereWithAggregatesInput!]
  NOT: [DashboardslistScalarWhereWithAggregatesInput!]
  OR: [DashboardslistScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  category: StringNullableWithAggregatesFilter
  checklists: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  privacy: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  sales: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  visits: StringNullableWithAggregatesFilter
}

type DashboardslistSumAggregate {
  id: BigInt
}

input DashboardslistSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardslistUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardslistUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardslistWhereInput {
  AND: [DashboardslistWhereInput!]
  NOT: [DashboardslistWhereInput!]
  OR: [DashboardslistWhereInput!]
  articles: StringNullableFilter
  category: StringNullableFilter
  checklists: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  logo: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  privacy: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  published: StringNullableFilter
  reports: StringNullableFilter
  sales: StringNullableFilter
  tasks: StringNullableFilter
  tickets: StringNullableFilter
  url: StringNullableFilter
  users: StringNullableFilter
  visits: StringNullableFilter
}

input DashboardslistWhereUniqueInput {
  id: BigInt
  name: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

"""
GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library.
"""
scalar Decimal

input DecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input DecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input DecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input DecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input DecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Integrations {
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsAvgAggregate {
  id: Float
}

input IntegrationsAvgOrderByAggregateInput {
  id: SortOrder
}

type IntegrationsCountAggregate {
  _all: Int!
  category: Int!
  content: Int!
  created_at: Int!
  id: Int!
  location: Int!
  media: Int!
  name: Int!
}

input IntegrationsCountOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsCreateInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsCreateManyInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

type IntegrationsGroupBy {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsMaxAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMaxOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

type IntegrationsMinAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMinOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsOrderByRelevanceFieldEnum {
  category
  content
  location
  media
  name
}

input IntegrationsOrderByRelevanceInput {
  fields: [IntegrationsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input IntegrationsOrderByWithAggregationInput {
  _avg: IntegrationsAvgOrderByAggregateInput
  _count: IntegrationsCountOrderByAggregateInput
  _max: IntegrationsMaxOrderByAggregateInput
  _min: IntegrationsMinOrderByAggregateInput
  _sum: IntegrationsSumOrderByAggregateInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: IntegrationsOrderByRelevanceInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsScalarFieldEnum {
  category
  content
  created_at
  id
  location
  media
  name
}

input IntegrationsScalarWhereWithAggregatesInput {
  AND: [IntegrationsScalarWhereWithAggregatesInput!]
  NOT: [IntegrationsScalarWhereWithAggregatesInput!]
  OR: [IntegrationsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type IntegrationsSumAggregate {
  id: BigInt
}

input IntegrationsSumOrderByAggregateInput {
  id: SortOrder
}

input IntegrationsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsWhereInput {
  AND: [IntegrationsWhereInput!]
  NOT: [IntegrationsWhereInput!]
  OR: [IntegrationsWhereInput!]
  category: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
}

input IntegrationsWhereUniqueInput {
  id: BigInt
}

type Internalization {
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationAvgAggregate {
  id: Float
}

input InternalizationAvgOrderByAggregateInput {
  id: SortOrder
}

type InternalizationCountAggregate {
  _all: Int!
  created_at: Int!
  default: Int!
  description: Int!
  id: Int!
  name: Int!
  region: Int!
  website: Int!
}

input InternalizationCountOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationCreateInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationCreateManyInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

type InternalizationGroupBy {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationMaxAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMaxOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

type InternalizationMinAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMinOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationOrderByRelevanceFieldEnum {
  default
  description
  name
  region
  website
}

input InternalizationOrderByRelevanceInput {
  fields: [InternalizationOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InternalizationOrderByWithAggregationInput {
  _avg: InternalizationAvgOrderByAggregateInput
  _count: InternalizationCountOrderByAggregateInput
  _max: InternalizationMaxOrderByAggregateInput
  _min: InternalizationMinOrderByAggregateInput
  _sum: InternalizationSumOrderByAggregateInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InternalizationOrderByRelevanceInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationScalarFieldEnum {
  created_at
  default
  description
  id
  name
  region
  website
}

input InternalizationScalarWhereWithAggregatesInput {
  AND: [InternalizationScalarWhereWithAggregatesInput!]
  NOT: [InternalizationScalarWhereWithAggregatesInput!]
  OR: [InternalizationScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  default: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type InternalizationSumAggregate {
  id: BigInt
}

input InternalizationSumOrderByAggregateInput {
  id: SortOrder
}

input InternalizationUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationWhereInput {
  AND: [InternalizationWhereInput!]
  NOT: [InternalizationWhereInput!]
  OR: [InternalizationWhereInput!]
  created_at: DateTimeNullableFilter
  default: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  region: StringNullableFilter
  website: StringNullableFilter
}

input InternalizationWhereUniqueInput {
  id: BigInt
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type LogIn {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt!
  password: String
  token: String
  username: String
  users: String
}

type LogInAvgAggregate {
  id: Float
}

input LogInAvgOrderByAggregateInput {
  id: SortOrder
}

type LogInCountAggregate {
  _all: Int!
  created_at: Int!
  email: Int!
  expiresIn: Int!
  id: Int!
  password: Int!
  token: Int!
  username: Int!
  users: Int!
}

input LogInCountOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

input LogInCreateInput {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInCreateManyInput {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

type LogInGroupBy {
  _avg: LogInAvgAggregate
  _count: LogInCountAggregate
  _max: LogInMaxAggregate
  _min: LogInMinAggregate
  _sum: LogInSumAggregate
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt!
  password: String
  token: String
  username: String
  users: String
}

type LogInMaxAggregate {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInMaxOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

type LogInMinAggregate {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInMinOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

enum LogInOrderByRelevanceFieldEnum {
  email
  expiresIn
  password
  token
  username
  users
}

input LogInOrderByRelevanceInput {
  fields: [LogInOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input LogInOrderByWithAggregationInput {
  _avg: LogInAvgOrderByAggregateInput
  _count: LogInCountOrderByAggregateInput
  _max: LogInMaxOrderByAggregateInput
  _min: LogInMinOrderByAggregateInput
  _sum: LogInSumOrderByAggregateInput
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

input LogInOrderByWithRelationAndSearchRelevanceInput {
  _relevance: LogInOrderByRelevanceInput
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

enum LogInScalarFieldEnum {
  created_at
  email
  expiresIn
  id
  password
  token
  username
  users
}

input LogInScalarWhereWithAggregatesInput {
  AND: [LogInScalarWhereWithAggregatesInput!]
  NOT: [LogInScalarWhereWithAggregatesInput!]
  OR: [LogInScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  expiresIn: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  token: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type LogInSumAggregate {
  id: BigInt
}

input LogInSumOrderByAggregateInput {
  id: SortOrder
}

input LogInUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expiresIn: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  token: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input LogInUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expiresIn: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  token: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input LogInWhereInput {
  AND: [LogInWhereInput!]
  NOT: [LogInWhereInput!]
  OR: [LogInWhereInput!]
  created_at: DateTimeNullableFilter
  email: StringNullableFilter
  expiresIn: StringNullableFilter
  id: BigIntFilter
  password: StringNullableFilter
  token: StringNullableFilter
  username: StringNullableFilter
  users: StringNullableFilter
}

input LogInWhereUniqueInput {
  id: BigInt
}

type Mediamanager {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerAvgAggregate {
  id: Float
}

input MediamanagerAvgOrderByAggregateInput {
  id: SortOrder
}

type MediamanagerCountAggregate {
  _all: Int!
  agreements: Int!
  agreements_agreementsTomediamanager: Int!
  albums: Int!
  author: Int!
  brands: Int!
  brands_brandsTomediamanager: Int!
  comment: Int!
  comments: Int!
  content_type: Int!
  copyright: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  dimensions: Int!
  expiration_date: Int!
  id: Int!
  keywords: Int!
  media: Int!
  members: Int!
  name: Int!
  products: Int!
  products_mediamanagerToproducts: Int!
  status: Int!
  tags: Int!
  task_description: Int!
  task_name: Int!
  task_type: Int!
  tasks: Int!
  users: Int!
  versions: Int!
  watermark_description: Int!
  watermark_media: Int!
  watermark_name: Int!
  workspace: Int!
}

input MediamanagerCountOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerCreateInput {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerCreateManyInput {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerGroupBy {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerMaxAggregate {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMaxOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

type MediamanagerMinAggregate {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMinOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerOrderByRelevanceFieldEnum {
  agreements
  agreements_agreementsTomediamanager
  albums
  author
  brands
  brands_brandsTomediamanager
  comment
  comments
  content_type
  copyright
  customers
  description
  dimensions
  expiration_date
  keywords
  media
  members
  name
  products
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_name
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerOrderByRelevanceInput {
  fields: [MediamanagerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input MediamanagerOrderByWithAggregationInput {
  _avg: MediamanagerAvgOrderByAggregateInput
  _count: MediamanagerCountOrderByAggregateInput
  _max: MediamanagerMaxOrderByAggregateInput
  _min: MediamanagerMinOrderByAggregateInput
  _sum: MediamanagerSumOrderByAggregateInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: MediamanagerOrderByRelevanceInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerScalarFieldEnum {
  agreements
  agreements_agreementsTomediamanager
  albums
  author
  brands
  brands_brandsTomediamanager
  comment
  comments
  content_type
  copyright
  created_at
  customers
  description
  dimensions
  expiration_date
  id
  keywords
  media
  members
  name
  products
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_name
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerScalarWhereWithAggregatesInput {
  AND: [MediamanagerScalarWhereWithAggregatesInput!]
  NOT: [MediamanagerScalarWhereWithAggregatesInput!]
  OR: [MediamanagerScalarWhereWithAggregatesInput!]
  agreements: StringNullableWithAggregatesFilter
  agreements_agreementsTomediamanager: StringNullableWithAggregatesFilter
  albums: StringNullableWithAggregatesFilter
  author: StringNullableWithAggregatesFilter
  brands: StringNullableWithAggregatesFilter
  brands_brandsTomediamanager: StringNullableWithAggregatesFilter
  comment: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  content_type: StringNullableWithAggregatesFilter
  copyright: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  dimensions: StringNullableWithAggregatesFilter
  expiration_date: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  keywords: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  members: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  products_mediamanagerToproducts: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  task_description: StringNullableWithAggregatesFilter
  task_name: StringNullableWithAggregatesFilter
  task_type: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  versions: StringNullableWithAggregatesFilter
  watermark_description: StringNullableWithAggregatesFilter
  watermark_media: StringNullableWithAggregatesFilter
  watermark_name: StringNullableWithAggregatesFilter
  workspace: StringNullableWithAggregatesFilter
}

type MediamanagerSumAggregate {
  id: Int
}

input MediamanagerSumOrderByAggregateInput {
  id: SortOrder
}

input MediamanagerUpdateInput {
  agreements: NullableStringFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableStringFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerUpdateManyMutationInput {
  agreements: NullableStringFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableStringFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerWhereInput {
  AND: [MediamanagerWhereInput!]
  NOT: [MediamanagerWhereInput!]
  OR: [MediamanagerWhereInput!]
  agreements: StringNullableFilter
  agreements_agreementsTomediamanager: StringNullableFilter
  albums: StringNullableFilter
  author: StringNullableFilter
  brands: StringNullableFilter
  brands_brandsTomediamanager: StringNullableFilter
  comment: StringNullableFilter
  comments: StringNullableFilter
  content_type: StringNullableFilter
  copyright: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  dimensions: StringNullableFilter
  expiration_date: StringNullableFilter
  id: IntFilter
  keywords: StringNullableFilter
  media: StringNullableFilter
  members: StringNullableFilter
  name: StringNullableFilter
  products: StringNullableFilter
  products_mediamanagerToproducts: StringNullableFilter
  status: StringNullableFilter
  tags: StringNullableFilter
  task_description: StringNullableFilter
  task_name: StringNullableFilter
  task_type: StringNullableFilter
  tasks: StringNullableFilter
  users: StringNullableFilter
  versions: StringNullableFilter
  watermark_description: StringNullableFilter
  watermark_media: StringNullableFilter
  watermark_name: StringNullableFilter
  workspace: StringNullableFilter
}

input MediamanagerWhereUniqueInput {
  id: Int
}

type Mutation {
  createManyAgreements(data: [AgreementsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyApitoken(data: [ApitokenCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCategories(data: [CategoriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContent_type(data: [Content_typeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCustomers(data: [CustomersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboardgraphql(data: [DashboardgraphqlCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboardjson(data: [DashboardjsonCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboardrestapi(data: [DashboardrestapiCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboards(data: [DashboardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboardslides(data: [DashboardslidesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboardslist(data: [DashboardslistCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyIntegrations(data: [IntegrationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInternalization(data: [InternalizationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLogIn(data: [LogInCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMediamanager(data: [MediamanagerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPages(data: [PagesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPermissions(data: [PermissionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPlugins(data: [PluginsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProviders(data: [ProvidersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRoles(data: [RolesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySettings(data: [SettingsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTags(data: [TagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyThemes(data: [ThemesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUpload_file(data: [Upload_fileCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWebhooks(data: [WebhooksCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAgreements(data: AgreementsCreateInput!): Agreements!
  createOneApitoken(data: ApitokenCreateInput!): Apitoken!
  createOneCategories(data: CategoriesCreateInput!): Categories!
  createOneContent_type(data: Content_typeCreateInput!): Content_type!
  createOneCustomers(data: CustomersCreateInput!): Customers!
  createOneDashboardgraphql(data: DashboardgraphqlCreateInput!): Dashboardgraphql!
  createOneDashboardjson(data: DashboardjsonCreateInput!): Dashboardjson!
  createOneDashboardrestapi(data: DashboardrestapiCreateInput!): Dashboardrestapi!
  createOneDashboards(data: DashboardsCreateInput!): Dashboards!
  createOneDashboardslides(data: DashboardslidesCreateInput!): Dashboardslides!
  createOneDashboardslist(data: DashboardslistCreateInput!): Dashboardslist!
  createOneIntegrations(data: IntegrationsCreateInput!): Integrations!
  createOneInternalization(data: InternalizationCreateInput!): Internalization!
  createOneLogIn(data: LogInCreateInput!): LogIn!
  createOneMediamanager(data: MediamanagerCreateInput!): Mediamanager!
  createOnePages(data: PagesCreateInput!): Pages!
  createOnePermissions(data: PermissionsCreateInput!): Permissions!
  createOnePlugins(data: PluginsCreateInput!): Plugins!
  createOneProviders(data: ProvidersCreateInput!): Providers!
  createOneRoles(data: RolesCreateInput!): Roles!
  createOneSettings(data: SettingsCreateInput!): Settings!
  createOneTags(data: TagsCreateInput!): Tags!
  createOneThemes(data: ThemesCreateInput!): Themes!
  createOneUpload_file(data: Upload_fileCreateInput!): Upload_file!
  createOneUsers(data: UsersCreateInput!): Users!
  createOneWebhooks(data: WebhooksCreateInput!): Webhooks!
  deleteManyAgreements(where: AgreementsWhereInput): AffectedRowsOutput!
  deleteManyApitoken(where: ApitokenWhereInput): AffectedRowsOutput!
  deleteManyCategories(where: CategoriesWhereInput): AffectedRowsOutput!
  deleteManyContent_type(where: Content_typeWhereInput): AffectedRowsOutput!
  deleteManyCustomers(where: CustomersWhereInput): AffectedRowsOutput!
  deleteManyDashboardgraphql(where: DashboardgraphqlWhereInput): AffectedRowsOutput!
  deleteManyDashboardjson(where: DashboardjsonWhereInput): AffectedRowsOutput!
  deleteManyDashboardrestapi(where: DashboardrestapiWhereInput): AffectedRowsOutput!
  deleteManyDashboards(where: DashboardsWhereInput): AffectedRowsOutput!
  deleteManyDashboardslides(where: DashboardslidesWhereInput): AffectedRowsOutput!
  deleteManyDashboardslist(where: DashboardslistWhereInput): AffectedRowsOutput!
  deleteManyIntegrations(where: IntegrationsWhereInput): AffectedRowsOutput!
  deleteManyInternalization(where: InternalizationWhereInput): AffectedRowsOutput!
  deleteManyLogIn(where: LogInWhereInput): AffectedRowsOutput!
  deleteManyMediamanager(where: MediamanagerWhereInput): AffectedRowsOutput!
  deleteManyPages(where: PagesWhereInput): AffectedRowsOutput!
  deleteManyPermissions(where: PermissionsWhereInput): AffectedRowsOutput!
  deleteManyPlugins(where: PluginsWhereInput): AffectedRowsOutput!
  deleteManyProviders(where: ProvidersWhereInput): AffectedRowsOutput!
  deleteManyRoles(where: RolesWhereInput): AffectedRowsOutput!
  deleteManySettings(where: SettingsWhereInput): AffectedRowsOutput!
  deleteManyTags(where: TagsWhereInput): AffectedRowsOutput!
  deleteManyThemes(where: ThemesWhereInput): AffectedRowsOutput!
  deleteManyUpload_file(where: Upload_fileWhereInput): AffectedRowsOutput!
  deleteManyUsers(where: UsersWhereInput): AffectedRowsOutput!
  deleteManyWebhooks(where: WebhooksWhereInput): AffectedRowsOutput!
  deleteOneAgreements(where: AgreementsWhereUniqueInput!): Agreements
  deleteOneApitoken(where: ApitokenWhereUniqueInput!): Apitoken
  deleteOneCategories(where: CategoriesWhereUniqueInput!): Categories
  deleteOneContent_type(where: Content_typeWhereUniqueInput!): Content_type
  deleteOneCustomers(where: CustomersWhereUniqueInput!): Customers
  deleteOneDashboardgraphql(where: DashboardgraphqlWhereUniqueInput!): Dashboardgraphql
  deleteOneDashboardjson(where: DashboardjsonWhereUniqueInput!): Dashboardjson
  deleteOneDashboardrestapi(where: DashboardrestapiWhereUniqueInput!): Dashboardrestapi
  deleteOneDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  deleteOneDashboardslides(where: DashboardslidesWhereUniqueInput!): Dashboardslides
  deleteOneDashboardslist(where: DashboardslistWhereUniqueInput!): Dashboardslist
  deleteOneIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  deleteOneInternalization(where: InternalizationWhereUniqueInput!): Internalization
  deleteOneLogIn(where: LogInWhereUniqueInput!): LogIn
  deleteOneMediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  deleteOnePages(where: PagesWhereUniqueInput!): Pages
  deleteOnePermissions(where: PermissionsWhereUniqueInput!): Permissions
  deleteOnePlugins(where: PluginsWhereUniqueInput!): Plugins
  deleteOneProviders(where: ProvidersWhereUniqueInput!): Providers
  deleteOneRoles(where: RolesWhereUniqueInput!): Roles
  deleteOneSettings(where: SettingsWhereUniqueInput!): Settings
  deleteOneTags(where: TagsWhereUniqueInput!): Tags
  deleteOneThemes(where: ThemesWhereUniqueInput!): Themes
  deleteOneUpload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  deleteOneUsers(where: UsersWhereUniqueInput!): Users
  deleteOneWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  updateManyAgreements(data: AgreementsUpdateManyMutationInput!, where: AgreementsWhereInput): AffectedRowsOutput!
  updateManyApitoken(data: ApitokenUpdateManyMutationInput!, where: ApitokenWhereInput): AffectedRowsOutput!
  updateManyCategories(data: CategoriesUpdateManyMutationInput!, where: CategoriesWhereInput): AffectedRowsOutput!
  updateManyContent_type(data: Content_typeUpdateManyMutationInput!, where: Content_typeWhereInput): AffectedRowsOutput!
  updateManyCustomers(data: CustomersUpdateManyMutationInput!, where: CustomersWhereInput): AffectedRowsOutput!
  updateManyDashboardgraphql(data: DashboardgraphqlUpdateManyMutationInput!, where: DashboardgraphqlWhereInput): AffectedRowsOutput!
  updateManyDashboardjson(data: DashboardjsonUpdateManyMutationInput!, where: DashboardjsonWhereInput): AffectedRowsOutput!
  updateManyDashboardrestapi(data: DashboardrestapiUpdateManyMutationInput!, where: DashboardrestapiWhereInput): AffectedRowsOutput!
  updateManyDashboards(data: DashboardsUpdateManyMutationInput!, where: DashboardsWhereInput): AffectedRowsOutput!
  updateManyDashboardslides(data: DashboardslidesUpdateManyMutationInput!, where: DashboardslidesWhereInput): AffectedRowsOutput!
  updateManyDashboardslist(data: DashboardslistUpdateManyMutationInput!, where: DashboardslistWhereInput): AffectedRowsOutput!
  updateManyIntegrations(data: IntegrationsUpdateManyMutationInput!, where: IntegrationsWhereInput): AffectedRowsOutput!
  updateManyInternalization(data: InternalizationUpdateManyMutationInput!, where: InternalizationWhereInput): AffectedRowsOutput!
  updateManyLogIn(data: LogInUpdateManyMutationInput!, where: LogInWhereInput): AffectedRowsOutput!
  updateManyMediamanager(data: MediamanagerUpdateManyMutationInput!, where: MediamanagerWhereInput): AffectedRowsOutput!
  updateManyPages(data: PagesUpdateManyMutationInput!, where: PagesWhereInput): AffectedRowsOutput!
  updateManyPermissions(data: PermissionsUpdateManyMutationInput!, where: PermissionsWhereInput): AffectedRowsOutput!
  updateManyPlugins(data: PluginsUpdateManyMutationInput!, where: PluginsWhereInput): AffectedRowsOutput!
  updateManyProviders(data: ProvidersUpdateManyMutationInput!, where: ProvidersWhereInput): AffectedRowsOutput!
  updateManyRoles(data: RolesUpdateManyMutationInput!, where: RolesWhereInput): AffectedRowsOutput!
  updateManySettings(data: SettingsUpdateManyMutationInput!, where: SettingsWhereInput): AffectedRowsOutput!
  updateManyTags(data: TagsUpdateManyMutationInput!, where: TagsWhereInput): AffectedRowsOutput!
  updateManyThemes(data: ThemesUpdateManyMutationInput!, where: ThemesWhereInput): AffectedRowsOutput!
  updateManyUpload_file(data: Upload_fileUpdateManyMutationInput!, where: Upload_fileWhereInput): AffectedRowsOutput!
  updateManyUsers(data: UsersUpdateManyMutationInput!, where: UsersWhereInput): AffectedRowsOutput!
  updateManyWebhooks(data: WebhooksUpdateManyMutationInput!, where: WebhooksWhereInput): AffectedRowsOutput!
  updateOneAgreements(data: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements
  updateOneApitoken(data: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken
  updateOneCategories(data: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories
  updateOneContent_type(data: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type
  updateOneCustomers(data: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers
  updateOneDashboardgraphql(data: DashboardgraphqlUpdateInput!, where: DashboardgraphqlWhereUniqueInput!): Dashboardgraphql
  updateOneDashboardjson(data: DashboardjsonUpdateInput!, where: DashboardjsonWhereUniqueInput!): Dashboardjson
  updateOneDashboardrestapi(data: DashboardrestapiUpdateInput!, where: DashboardrestapiWhereUniqueInput!): Dashboardrestapi
  updateOneDashboards(data: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards
  updateOneDashboardslides(data: DashboardslidesUpdateInput!, where: DashboardslidesWhereUniqueInput!): Dashboardslides
  updateOneDashboardslist(data: DashboardslistUpdateInput!, where: DashboardslistWhereUniqueInput!): Dashboardslist
  updateOneIntegrations(data: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations
  updateOneInternalization(data: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization
  updateOneLogIn(data: LogInUpdateInput!, where: LogInWhereUniqueInput!): LogIn
  updateOneMediamanager(data: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager
  updateOnePages(data: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages
  updateOnePermissions(data: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions
  updateOnePlugins(data: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins
  updateOneProviders(data: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers
  updateOneRoles(data: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles
  updateOneSettings(data: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings
  updateOneTags(data: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags
  updateOneThemes(data: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes
  updateOneUpload_file(data: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file
  updateOneUsers(data: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users
  updateOneWebhooks(data: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks
  upsertOneAgreements(create: AgreementsCreateInput!, update: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements!
  upsertOneApitoken(create: ApitokenCreateInput!, update: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken!
  upsertOneCategories(create: CategoriesCreateInput!, update: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories!
  upsertOneContent_type(create: Content_typeCreateInput!, update: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type!
  upsertOneCustomers(create: CustomersCreateInput!, update: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers!
  upsertOneDashboardgraphql(create: DashboardgraphqlCreateInput!, update: DashboardgraphqlUpdateInput!, where: DashboardgraphqlWhereUniqueInput!): Dashboardgraphql!
  upsertOneDashboardjson(create: DashboardjsonCreateInput!, update: DashboardjsonUpdateInput!, where: DashboardjsonWhereUniqueInput!): Dashboardjson!
  upsertOneDashboardrestapi(create: DashboardrestapiCreateInput!, update: DashboardrestapiUpdateInput!, where: DashboardrestapiWhereUniqueInput!): Dashboardrestapi!
  upsertOneDashboards(create: DashboardsCreateInput!, update: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards!
  upsertOneDashboardslides(create: DashboardslidesCreateInput!, update: DashboardslidesUpdateInput!, where: DashboardslidesWhereUniqueInput!): Dashboardslides!
  upsertOneDashboardslist(create: DashboardslistCreateInput!, update: DashboardslistUpdateInput!, where: DashboardslistWhereUniqueInput!): Dashboardslist!
  upsertOneIntegrations(create: IntegrationsCreateInput!, update: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations!
  upsertOneInternalization(create: InternalizationCreateInput!, update: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization!
  upsertOneLogIn(create: LogInCreateInput!, update: LogInUpdateInput!, where: LogInWhereUniqueInput!): LogIn!
  upsertOneMediamanager(create: MediamanagerCreateInput!, update: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager!
  upsertOnePages(create: PagesCreateInput!, update: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages!
  upsertOnePermissions(create: PermissionsCreateInput!, update: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions!
  upsertOnePlugins(create: PluginsCreateInput!, update: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins!
  upsertOneProviders(create: ProvidersCreateInput!, update: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers!
  upsertOneRoles(create: RolesCreateInput!, update: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles!
  upsertOneSettings(create: SettingsCreateInput!, update: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings!
  upsertOneTags(create: TagsCreateInput!, update: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags!
  upsertOneThemes(create: ThemesCreateInput!, update: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes!
  upsertOneUpload_file(create: Upload_fileCreateInput!, update: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file!
  upsertOneUsers(create: UsersCreateInput!, update: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users!
  upsertOneWebhooks(create: WebhooksCreateInput!, update: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks!
}

input NestedBigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input NestedBigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedDecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableDecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Pages {
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesAvgAggregate {
  id: Float
}

input PagesAvgOrderByAggregateInput {
  id: SortOrder
}

type PagesCountAggregate {
  _all: Int!
  content: Int!
  content_title: Int!
  created_at: Int!
  enable_page: Int!
  id: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  title: Int!
  url_key: Int!
}

input PagesCountOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  created_at: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesCreateInput {
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

input PagesCreateManyInput {
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesGroupBy {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesMaxAggregate {
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMaxOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  created_at: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

type PagesMinAggregate {
  content: String
  content_title: String
  created_at: DateTime
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMinOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  created_at: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesOrderByRelevanceFieldEnum {
  content
  content_title
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesOrderByRelevanceInput {
  fields: [PagesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PagesOrderByWithAggregationInput {
  _avg: PagesAvgOrderByAggregateInput
  _count: PagesCountOrderByAggregateInput
  _max: PagesMaxOrderByAggregateInput
  _min: PagesMinOrderByAggregateInput
  _sum: PagesSumOrderByAggregateInput
  content: SortOrder
  content_title: SortOrder
  created_at: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PagesOrderByRelevanceInput
  content: SortOrder
  content_title: SortOrder
  created_at: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesScalarFieldEnum {
  content
  content_title
  created_at
  enable_page
  id
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesScalarWhereWithAggregatesInput {
  AND: [PagesScalarWhereWithAggregatesInput!]
  NOT: [PagesScalarWhereWithAggregatesInput!]
  OR: [PagesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  content_title: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  enable_page: BoolNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  url_key: StringNullableWithAggregatesFilter
}

type PagesSumAggregate {
  id: Int
}

input PagesSumOrderByAggregateInput {
  id: SortOrder
}

input PagesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesWhereInput {
  AND: [PagesWhereInput!]
  NOT: [PagesWhereInput!]
  OR: [PagesWhereInput!]
  content: StringNullableFilter
  content_title: StringNullableFilter
  created_at: DateTimeNullableFilter
  enable_page: BoolNullableFilter
  id: IntFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  title: StringFilter
  url_key: StringNullableFilter
}

input PagesWhereUniqueInput {
  id: Int
}

type Permissions {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsAvgAggregate {
  id: Float
}

input PermissionsAvgOrderByAggregateInput {
  id: SortOrder
}

type PermissionsCountAggregate {
  _all: Int!
  content: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  id: Int!
  name: Int!
  read: Int!
  role: Int!
  update: Int!
  users: Int!
}

input PermissionsCountOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsCreateInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsCreateManyInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsGroupBy {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsMaxAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMaxOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

type PermissionsMinAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMinOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsOrderByRelevanceFieldEnum {
  content
  create
  delete
  name
  read
  role
  update
  users
}

input PermissionsOrderByRelevanceInput {
  fields: [PermissionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PermissionsOrderByWithAggregationInput {
  _avg: PermissionsAvgOrderByAggregateInput
  _count: PermissionsCountOrderByAggregateInput
  _max: PermissionsMaxOrderByAggregateInput
  _min: PermissionsMinOrderByAggregateInput
  _sum: PermissionsSumOrderByAggregateInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PermissionsOrderByRelevanceInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsScalarFieldEnum {
  content
  create
  created_at
  delete
  id
  name
  read
  role
  update
  users
}

input PermissionsScalarWhereWithAggregatesInput {
  AND: [PermissionsScalarWhereWithAggregatesInput!]
  NOT: [PermissionsScalarWhereWithAggregatesInput!]
  OR: [PermissionsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  read: StringNullableWithAggregatesFilter
  role: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type PermissionsSumAggregate {
  id: BigInt
}

input PermissionsSumOrderByAggregateInput {
  id: SortOrder
}

input PermissionsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsWhereInput {
  AND: [PermissionsWhereInput!]
  NOT: [PermissionsWhereInput!]
  OR: [PermissionsWhereInput!]
  content: StringNullableFilter
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  read: StringNullableFilter
  role: StringNullableFilter
  update: StringNullableFilter
  users: StringNullableFilter
}

input PermissionsWhereUniqueInput {
  id: BigInt
}

type Plugins {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsAvgAggregate {
  id: Float
}

input PluginsAvgOrderByAggregateInput {
  id: SortOrder
}

type PluginsCountAggregate {
  _all: Int!
  agree_terms: Int!
  created_at: Int!
  description: Int!
  github_link: Int!
  id: Int!
  last_updated: Int!
  logo: Int!
  name: Int!
  publisher_email: Int!
  publisher_name: Int!
  screenshots: Int!
  url: Int!
}

input PluginsCountOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsCreateInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsCreateManyInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsGroupBy {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsMaxAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMaxOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

type PluginsMinAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMinOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsOrderByRelevanceFieldEnum {
  description
  github_link
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsOrderByRelevanceInput {
  fields: [PluginsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PluginsOrderByWithAggregationInput {
  _avg: PluginsAvgOrderByAggregateInput
  _count: PluginsCountOrderByAggregateInput
  _max: PluginsMaxOrderByAggregateInput
  _min: PluginsMinOrderByAggregateInput
  _sum: PluginsSumOrderByAggregateInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PluginsOrderByRelevanceInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsScalarFieldEnum {
  agree_terms
  created_at
  description
  github_link
  id
  last_updated
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsScalarWhereWithAggregatesInput {
  AND: [PluginsScalarWhereWithAggregatesInput!]
  NOT: [PluginsScalarWhereWithAggregatesInput!]
  OR: [PluginsScalarWhereWithAggregatesInput!]
  agree_terms: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  github_link: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  last_updated: DateTimeNullableWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  publisher_email: StringNullableWithAggregatesFilter
  publisher_name: StringNullableWithAggregatesFilter
  screenshots: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type PluginsSumAggregate {
  id: BigInt
}

input PluginsSumOrderByAggregateInput {
  id: SortOrder
}

input PluginsUpdateInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsUpdateManyMutationInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsWhereInput {
  AND: [PluginsWhereInput!]
  NOT: [PluginsWhereInput!]
  OR: [PluginsWhereInput!]
  agree_terms: BoolNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  github_link: StringNullableFilter
  id: BigIntFilter
  last_updated: DateTimeNullableFilter
  logo: StringNullableFilter
  name: StringNullableFilter
  publisher_email: StringNullableFilter
  publisher_name: StringNullableFilter
  screenshots: StringNullableFilter
  url: StringNullableFilter
}

input PluginsWhereUniqueInput {
  id: BigInt
}

type Providers {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersAvgAggregate {
  id: Float
}

input ProvidersAvgOrderByAggregateInput {
  id: SortOrder
}

type ProvidersCountAggregate {
  _all: Int!
  active: Int!
  client_id: Int!
  client_secret: Int!
  created_at: Int!
  host_uri: Int!
  icon: Int!
  id: Int!
  name: Int!
  redirect_url: Int!
  redirect_url_app: Int!
}

input ProvidersCountOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersCreateInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

input ProvidersCreateManyInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersGroupBy {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersMaxAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMaxOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

type ProvidersMinAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMinOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersOrderByRelevanceFieldEnum {
  active
  client_id
  client_secret
  host_uri
  icon
  name
  redirect_url
  redirect_url_app
}

input ProvidersOrderByRelevanceInput {
  fields: [ProvidersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProvidersOrderByWithAggregationInput {
  _avg: ProvidersAvgOrderByAggregateInput
  _count: ProvidersCountOrderByAggregateInput
  _max: ProvidersMaxOrderByAggregateInput
  _min: ProvidersMinOrderByAggregateInput
  _sum: ProvidersSumOrderByAggregateInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProvidersOrderByRelevanceInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersScalarFieldEnum {
  active
  client_id
  client_secret
  created_at
  host_uri
  icon
  id
  name
  redirect_url
  redirect_url_app
}

input ProvidersScalarWhereWithAggregatesInput {
  AND: [ProvidersScalarWhereWithAggregatesInput!]
  NOT: [ProvidersScalarWhereWithAggregatesInput!]
  OR: [ProvidersScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  host_uri: StringNullableWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  redirect_url: StringNullableWithAggregatesFilter
  redirect_url_app: StringNullableWithAggregatesFilter
}

type ProvidersSumAggregate {
  id: BigInt
}

input ProvidersSumOrderByAggregateInput {
  id: SortOrder
}

input ProvidersUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersWhereInput {
  AND: [ProvidersWhereInput!]
  NOT: [ProvidersWhereInput!]
  OR: [ProvidersWhereInput!]
  active: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  created_at: DateTimeNullableFilter
  host_uri: StringNullableFilter
  icon: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  redirect_url: StringNullableFilter
  redirect_url_app: StringNullableFilter
}

input ProvidersWhereUniqueInput {
  id: BigInt
  name: String
}

type Query {
  aggregateAgreements(cursor: AgreementsWhereUniqueInput, orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): AggregateAgreements!
  aggregateApitoken(cursor: ApitokenWhereUniqueInput, orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): AggregateApitoken!
  aggregateCategories(cursor: CategoriesWhereUniqueInput, orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): AggregateCategories!
  aggregateContent_type(cursor: Content_typeWhereUniqueInput, orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): AggregateContent_type!
  aggregateCustomers(cursor: CustomersWhereUniqueInput, orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): AggregateCustomers!
  aggregateDashboardgraphql(cursor: DashboardgraphqlWhereUniqueInput, orderBy: [DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardgraphqlWhereInput): AggregateDashboardgraphql!
  aggregateDashboardjson(cursor: DashboardjsonWhereUniqueInput, orderBy: [DashboardjsonOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardjsonWhereInput): AggregateDashboardjson!
  aggregateDashboardrestapi(cursor: DashboardrestapiWhereUniqueInput, orderBy: [DashboardrestapiOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardrestapiWhereInput): AggregateDashboardrestapi!
  aggregateDashboards(cursor: DashboardsWhereUniqueInput, orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): AggregateDashboards!
  aggregateDashboardslides(cursor: DashboardslidesWhereUniqueInput, orderBy: [DashboardslidesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslidesWhereInput): AggregateDashboardslides!
  aggregateDashboardslist(cursor: DashboardslistWhereUniqueInput, orderBy: [DashboardslistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslistWhereInput): AggregateDashboardslist!
  aggregateIntegrations(cursor: IntegrationsWhereUniqueInput, orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): AggregateIntegrations!
  aggregateInternalization(cursor: InternalizationWhereUniqueInput, orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): AggregateInternalization!
  aggregateLogIn(cursor: LogInWhereUniqueInput, orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): AggregateLogIn!
  aggregateMediamanager(cursor: MediamanagerWhereUniqueInput, orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): AggregateMediamanager!
  aggregatePages(cursor: PagesWhereUniqueInput, orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): AggregatePages!
  aggregatePermissions(cursor: PermissionsWhereUniqueInput, orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): AggregatePermissions!
  aggregatePlugins(cursor: PluginsWhereUniqueInput, orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): AggregatePlugins!
  aggregateProviders(cursor: ProvidersWhereUniqueInput, orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): AggregateProviders!
  aggregateRoles(cursor: RolesWhereUniqueInput, orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): AggregateRoles!
  aggregateSettings(cursor: SettingsWhereUniqueInput, orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): AggregateSettings!
  aggregateTags(cursor: TagsWhereUniqueInput, orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): AggregateTags!
  aggregateThemes(cursor: ThemesWhereUniqueInput, orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): AggregateThemes!
  aggregateUpload_file(cursor: Upload_fileWhereUniqueInput, orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): AggregateUpload_file!
  aggregateUsers(cursor: UsersWhereUniqueInput, orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): AggregateUsers!
  aggregateWebhooks(cursor: WebhooksWhereUniqueInput, orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): AggregateWebhooks!
  apitoken(where: ApitokenWhereUniqueInput!): Apitoken
  apitokens(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): [Apitoken!]!
  content_type(where: Content_typeWhereUniqueInput!): Content_type
  content_types(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_type!]!
  dashboardgraphql(where: DashboardgraphqlWhereUniqueInput!): Dashboardgraphql
  dashboardgraphqls(cursor: DashboardgraphqlWhereUniqueInput, distinct: [DashboardgraphqlScalarFieldEnum!], orderBy: [DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardgraphqlWhereInput): [Dashboardgraphql!]!
  dashboardjson(where: DashboardjsonWhereUniqueInput!): Dashboardjson
  dashboardjsons(cursor: DashboardjsonWhereUniqueInput, distinct: [DashboardjsonScalarFieldEnum!], orderBy: [DashboardjsonOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardjsonWhereInput): [Dashboardjson!]!
  dashboardrestapi(where: DashboardrestapiWhereUniqueInput!): Dashboardrestapi
  dashboardrestapis(cursor: DashboardrestapiWhereUniqueInput, distinct: [DashboardrestapiScalarFieldEnum!], orderBy: [DashboardrestapiOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardrestapiWhereInput): [Dashboardrestapi!]!
  dashboardslist(where: DashboardslistWhereUniqueInput!): Dashboardslist
  dashboardslists(cursor: DashboardslistWhereUniqueInput, distinct: [DashboardslistScalarFieldEnum!], orderBy: [DashboardslistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslistWhereInput): [Dashboardslist!]!
  findFirstAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): Agreements
  findFirstAgreementsOrThrow(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): Agreements
  findFirstApitoken(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): Apitoken
  findFirstApitokenOrThrow(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): Apitoken
  findFirstCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): Categories
  findFirstCategoriesOrThrow(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): Categories
  findFirstContent_type(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): Content_type
  findFirstContent_typeOrThrow(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): Content_type
  findFirstCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): Customers
  findFirstCustomersOrThrow(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): Customers
  findFirstDashboardgraphql(cursor: DashboardgraphqlWhereUniqueInput, distinct: [DashboardgraphqlScalarFieldEnum!], orderBy: [DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardgraphqlWhereInput): Dashboardgraphql
  findFirstDashboardgraphqlOrThrow(cursor: DashboardgraphqlWhereUniqueInput, distinct: [DashboardgraphqlScalarFieldEnum!], orderBy: [DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardgraphqlWhereInput): Dashboardgraphql
  findFirstDashboardjson(cursor: DashboardjsonWhereUniqueInput, distinct: [DashboardjsonScalarFieldEnum!], orderBy: [DashboardjsonOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardjsonWhereInput): Dashboardjson
  findFirstDashboardjsonOrThrow(cursor: DashboardjsonWhereUniqueInput, distinct: [DashboardjsonScalarFieldEnum!], orderBy: [DashboardjsonOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardjsonWhereInput): Dashboardjson
  findFirstDashboardrestapi(cursor: DashboardrestapiWhereUniqueInput, distinct: [DashboardrestapiScalarFieldEnum!], orderBy: [DashboardrestapiOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardrestapiWhereInput): Dashboardrestapi
  findFirstDashboardrestapiOrThrow(cursor: DashboardrestapiWhereUniqueInput, distinct: [DashboardrestapiScalarFieldEnum!], orderBy: [DashboardrestapiOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardrestapiWhereInput): Dashboardrestapi
  findFirstDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): Dashboards
  findFirstDashboardsOrThrow(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): Dashboards
  findFirstDashboardslides(cursor: DashboardslidesWhereUniqueInput, distinct: [DashboardslidesScalarFieldEnum!], orderBy: [DashboardslidesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslidesWhereInput): Dashboardslides
  findFirstDashboardslidesOrThrow(cursor: DashboardslidesWhereUniqueInput, distinct: [DashboardslidesScalarFieldEnum!], orderBy: [DashboardslidesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslidesWhereInput): Dashboardslides
  findFirstDashboardslist(cursor: DashboardslistWhereUniqueInput, distinct: [DashboardslistScalarFieldEnum!], orderBy: [DashboardslistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslistWhereInput): Dashboardslist
  findFirstDashboardslistOrThrow(cursor: DashboardslistWhereUniqueInput, distinct: [DashboardslistScalarFieldEnum!], orderBy: [DashboardslistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslistWhereInput): Dashboardslist
  findFirstIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): Integrations
  findFirstIntegrationsOrThrow(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): Integrations
  findFirstInternalization(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): Internalization
  findFirstInternalizationOrThrow(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): Internalization
  findFirstLogIn(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): LogIn
  findFirstLogInOrThrow(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): LogIn
  findFirstMediamanager(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): Mediamanager
  findFirstMediamanagerOrThrow(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): Mediamanager
  findFirstPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): Pages
  findFirstPagesOrThrow(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): Pages
  findFirstPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): Permissions
  findFirstPermissionsOrThrow(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): Permissions
  findFirstPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): Plugins
  findFirstPluginsOrThrow(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): Plugins
  findFirstProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): Providers
  findFirstProvidersOrThrow(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): Providers
  findFirstRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): Roles
  findFirstRolesOrThrow(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): Roles
  findFirstSettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): Settings
  findFirstSettingsOrThrow(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): Settings
  findFirstTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): Tags
  findFirstTagsOrThrow(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): Tags
  findFirstThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): Themes
  findFirstThemesOrThrow(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): Themes
  findFirstUpload_file(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): Upload_file
  findFirstUpload_fileOrThrow(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): Upload_file
  findFirstUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstUsersOrThrow(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): Webhooks
  findFirstWebhooksOrThrow(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): Webhooks
  findManyAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): [Agreements!]!
  findManyCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): [Categories!]!
  findManyCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): [Customers!]!
  findManyDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): [Dashboards!]!
  findManyDashboardslides(cursor: DashboardslidesWhereUniqueInput, distinct: [DashboardslidesScalarFieldEnum!], orderBy: [DashboardslidesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardslidesWhereInput): [Dashboardslides!]!
  findManyIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [Integrations!]!
  findManyPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): [Pages!]!
  findManyPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): [Permissions!]!
  findManyPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): [Plugins!]!
  findManyProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): [Providers!]!
  findManyRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): [Roles!]!
  findManySettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): [Settings!]!
  findManyTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): [Tags!]!
  findManyThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): [Themes!]!
  findManyUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): [Users!]!
  findManyWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): [Webhooks!]!
  findUniqueAgreements(where: AgreementsWhereUniqueInput!): Agreements
  findUniqueAgreementsOrThrow(where: AgreementsWhereUniqueInput!): Agreements
  findUniqueCategories(where: CategoriesWhereUniqueInput!): Categories
  findUniqueCategoriesOrThrow(where: CategoriesWhereUniqueInput!): Categories
  findUniqueCustomers(where: CustomersWhereUniqueInput!): Customers
  findUniqueCustomersOrThrow(where: CustomersWhereUniqueInput!): Customers
  findUniqueDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  findUniqueDashboardsOrThrow(where: DashboardsWhereUniqueInput!): Dashboards
  findUniqueDashboardslides(where: DashboardslidesWhereUniqueInput!): Dashboardslides
  findUniqueDashboardslidesOrThrow(where: DashboardslidesWhereUniqueInput!): Dashboardslides
  findUniqueIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  findUniqueIntegrationsOrThrow(where: IntegrationsWhereUniqueInput!): Integrations
  findUniquePages(where: PagesWhereUniqueInput!): Pages
  findUniquePagesOrThrow(where: PagesWhereUniqueInput!): Pages
  findUniquePermissions(where: PermissionsWhereUniqueInput!): Permissions
  findUniquePermissionsOrThrow(where: PermissionsWhereUniqueInput!): Permissions
  findUniquePlugins(where: PluginsWhereUniqueInput!): Plugins
  findUniquePluginsOrThrow(where: PluginsWhereUniqueInput!): Plugins
  findUniqueProviders(where: ProvidersWhereUniqueInput!): Providers
  findUniqueProvidersOrThrow(where: ProvidersWhereUniqueInput!): Providers
  findUniqueRoles(where: RolesWhereUniqueInput!): Roles
  findUniqueRolesOrThrow(where: RolesWhereUniqueInput!): Roles
  findUniqueSettings(where: SettingsWhereUniqueInput!): Settings
  findUniqueSettingsOrThrow(where: SettingsWhereUniqueInput!): Settings
  findUniqueTags(where: TagsWhereUniqueInput!): Tags
  findUniqueTagsOrThrow(where: TagsWhereUniqueInput!): Tags
  findUniqueThemes(where: ThemesWhereUniqueInput!): Themes
  findUniqueThemesOrThrow(where: ThemesWhereUniqueInput!): Themes
  findUniqueUsers(where: UsersWhereUniqueInput!): Users
  findUniqueUsersOrThrow(where: UsersWhereUniqueInput!): Users
  findUniqueWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  findUniqueWebhooksOrThrow(where: WebhooksWhereUniqueInput!): Webhooks
  getApitoken(where: ApitokenWhereUniqueInput!): Apitoken
  getContent_type(where: Content_typeWhereUniqueInput!): Content_type
  getDashboardgraphql(where: DashboardgraphqlWhereUniqueInput!): Dashboardgraphql
  getDashboardjson(where: DashboardjsonWhereUniqueInput!): Dashboardjson
  getDashboardrestapi(where: DashboardrestapiWhereUniqueInput!): Dashboardrestapi
  getDashboardslist(where: DashboardslistWhereUniqueInput!): Dashboardslist
  getInternalization(where: InternalizationWhereUniqueInput!): Internalization
  getLogIn(where: LogInWhereUniqueInput!): LogIn
  getMediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  getUpload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  groupByAgreements(by: [AgreementsScalarFieldEnum!]!, having: AgreementsScalarWhereWithAggregatesInput, orderBy: [AgreementsOrderByWithAggregationInput!], skip: Int, take: Int, where: AgreementsWhereInput): [AgreementsGroupBy!]!
  groupByApitoken(by: [ApitokenScalarFieldEnum!]!, having: ApitokenScalarWhereWithAggregatesInput, orderBy: [ApitokenOrderByWithAggregationInput!], skip: Int, take: Int, where: ApitokenWhereInput): [ApitokenGroupBy!]!
  groupByCategories(by: [CategoriesScalarFieldEnum!]!, having: CategoriesScalarWhereWithAggregatesInput, orderBy: [CategoriesOrderByWithAggregationInput!], skip: Int, take: Int, where: CategoriesWhereInput): [CategoriesGroupBy!]!
  groupByContent_type(by: [Content_typeScalarFieldEnum!]!, having: Content_typeScalarWhereWithAggregatesInput, orderBy: [Content_typeOrderByWithAggregationInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_typeGroupBy!]!
  groupByCustomers(by: [CustomersScalarFieldEnum!]!, having: CustomersScalarWhereWithAggregatesInput, orderBy: [CustomersOrderByWithAggregationInput!], skip: Int, take: Int, where: CustomersWhereInput): [CustomersGroupBy!]!
  groupByDashboardgraphql(by: [DashboardgraphqlScalarFieldEnum!]!, having: DashboardgraphqlScalarWhereWithAggregatesInput, orderBy: [DashboardgraphqlOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardgraphqlWhereInput): [DashboardgraphqlGroupBy!]!
  groupByDashboardjson(by: [DashboardjsonScalarFieldEnum!]!, having: DashboardjsonScalarWhereWithAggregatesInput, orderBy: [DashboardjsonOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardjsonWhereInput): [DashboardjsonGroupBy!]!
  groupByDashboardrestapi(by: [DashboardrestapiScalarFieldEnum!]!, having: DashboardrestapiScalarWhereWithAggregatesInput, orderBy: [DashboardrestapiOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardrestapiWhereInput): [DashboardrestapiGroupBy!]!
  groupByDashboards(by: [DashboardsScalarFieldEnum!]!, having: DashboardsScalarWhereWithAggregatesInput, orderBy: [DashboardsOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardsWhereInput): [DashboardsGroupBy!]!
  groupByDashboardslides(by: [DashboardslidesScalarFieldEnum!]!, having: DashboardslidesScalarWhereWithAggregatesInput, orderBy: [DashboardslidesOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardslidesWhereInput): [DashboardslidesGroupBy!]!
  groupByDashboardslist(by: [DashboardslistScalarFieldEnum!]!, having: DashboardslistScalarWhereWithAggregatesInput, orderBy: [DashboardslistOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardslistWhereInput): [DashboardslistGroupBy!]!
  groupByIntegrations(by: [IntegrationsScalarFieldEnum!]!, having: IntegrationsScalarWhereWithAggregatesInput, orderBy: [IntegrationsOrderByWithAggregationInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [IntegrationsGroupBy!]!
  groupByInternalization(by: [InternalizationScalarFieldEnum!]!, having: InternalizationScalarWhereWithAggregatesInput, orderBy: [InternalizationOrderByWithAggregationInput!], skip: Int, take: Int, where: InternalizationWhereInput): [InternalizationGroupBy!]!
  groupByLogIn(by: [LogInScalarFieldEnum!]!, having: LogInScalarWhereWithAggregatesInput, orderBy: [LogInOrderByWithAggregationInput!], skip: Int, take: Int, where: LogInWhereInput): [LogInGroupBy!]!
  groupByMediamanager(by: [MediamanagerScalarFieldEnum!]!, having: MediamanagerScalarWhereWithAggregatesInput, orderBy: [MediamanagerOrderByWithAggregationInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [MediamanagerGroupBy!]!
  groupByPages(by: [PagesScalarFieldEnum!]!, having: PagesScalarWhereWithAggregatesInput, orderBy: [PagesOrderByWithAggregationInput!], skip: Int, take: Int, where: PagesWhereInput): [PagesGroupBy!]!
  groupByPermissions(by: [PermissionsScalarFieldEnum!]!, having: PermissionsScalarWhereWithAggregatesInput, orderBy: [PermissionsOrderByWithAggregationInput!], skip: Int, take: Int, where: PermissionsWhereInput): [PermissionsGroupBy!]!
  groupByPlugins(by: [PluginsScalarFieldEnum!]!, having: PluginsScalarWhereWithAggregatesInput, orderBy: [PluginsOrderByWithAggregationInput!], skip: Int, take: Int, where: PluginsWhereInput): [PluginsGroupBy!]!
  groupByProviders(by: [ProvidersScalarFieldEnum!]!, having: ProvidersScalarWhereWithAggregatesInput, orderBy: [ProvidersOrderByWithAggregationInput!], skip: Int, take: Int, where: ProvidersWhereInput): [ProvidersGroupBy!]!
  groupByRoles(by: [RolesScalarFieldEnum!]!, having: RolesScalarWhereWithAggregatesInput, orderBy: [RolesOrderByWithAggregationInput!], skip: Int, take: Int, where: RolesWhereInput): [RolesGroupBy!]!
  groupBySettings(by: [SettingsScalarFieldEnum!]!, having: SettingsScalarWhereWithAggregatesInput, orderBy: [SettingsOrderByWithAggregationInput!], skip: Int, take: Int, where: SettingsWhereInput): [SettingsGroupBy!]!
  groupByTags(by: [TagsScalarFieldEnum!]!, having: TagsScalarWhereWithAggregatesInput, orderBy: [TagsOrderByWithAggregationInput!], skip: Int, take: Int, where: TagsWhereInput): [TagsGroupBy!]!
  groupByThemes(by: [ThemesScalarFieldEnum!]!, having: ThemesScalarWhereWithAggregatesInput, orderBy: [ThemesOrderByWithAggregationInput!], skip: Int, take: Int, where: ThemesWhereInput): [ThemesGroupBy!]!
  groupByUpload_file(by: [Upload_fileScalarFieldEnum!]!, having: Upload_fileScalarWhereWithAggregatesInput, orderBy: [Upload_fileOrderByWithAggregationInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_fileGroupBy!]!
  groupByUsers(by: [UsersScalarFieldEnum!]!, having: UsersScalarWhereWithAggregatesInput, orderBy: [UsersOrderByWithAggregationInput!], skip: Int, take: Int, where: UsersWhereInput): [UsersGroupBy!]!
  groupByWebhooks(by: [WebhooksScalarFieldEnum!]!, having: WebhooksScalarWhereWithAggregatesInput, orderBy: [WebhooksOrderByWithAggregationInput!], skip: Int, take: Int, where: WebhooksWhereInput): [WebhooksGroupBy!]!
  internalization(where: InternalizationWhereUniqueInput!): Internalization
  internalizations(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): [Internalization!]!
  logIn(where: LogInWhereUniqueInput!): LogIn
  logIns(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): [LogIn!]!
  mediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  mediamanagers(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [Mediamanager!]!
  upload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  upload_files(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_file!]!
}

enum QueryMode {
  default
  insensitive
}

type Roles {
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  id: Int!
  publishRole: String
  role: String
  role_name: String!
  type: String
  unpublishRole: String
  updateRole: String
}

type RolesAvgAggregate {
  id: Float
}

input RolesAvgOrderByAggregateInput {
  id: SortOrder
}

type RolesCountAggregate {
  _all: Int!
  content: Int!
  createRole: Int!
  created_at: Int!
  deleteRole: Int!
  id: Int!
  publishRole: Int!
  role: Int!
  role_name: Int!
  type: Int!
  unpublishRole: Int!
  updateRole: Int!
}

input RolesCountOrderByAggregateInput {
  content: SortOrder
  createRole: SortOrder
  created_at: SortOrder
  deleteRole: SortOrder
  id: SortOrder
  publishRole: SortOrder
  role: SortOrder
  role_name: SortOrder
  type: SortOrder
  unpublishRole: SortOrder
  updateRole: SortOrder
}

input RolesCreateInput {
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  publishRole: String
  role: String
  role_name: String!
  type: String
  unpublishRole: String
  updateRole: String
}

input RolesCreateManyInput {
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  id: Int
  publishRole: String
  role: String
  role_name: String!
  type: String
  unpublishRole: String
  updateRole: String
}

type RolesGroupBy {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  id: Int!
  publishRole: String
  role: String
  role_name: String!
  type: String
  unpublishRole: String
  updateRole: String
}

type RolesMaxAggregate {
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  id: Int
  publishRole: String
  role: String
  role_name: String
  type: String
  unpublishRole: String
  updateRole: String
}

input RolesMaxOrderByAggregateInput {
  content: SortOrder
  createRole: SortOrder
  created_at: SortOrder
  deleteRole: SortOrder
  id: SortOrder
  publishRole: SortOrder
  role: SortOrder
  role_name: SortOrder
  type: SortOrder
  unpublishRole: SortOrder
  updateRole: SortOrder
}

type RolesMinAggregate {
  content: String
  createRole: String
  created_at: DateTime
  deleteRole: String
  id: Int
  publishRole: String
  role: String
  role_name: String
  type: String
  unpublishRole: String
  updateRole: String
}

input RolesMinOrderByAggregateInput {
  content: SortOrder
  createRole: SortOrder
  created_at: SortOrder
  deleteRole: SortOrder
  id: SortOrder
  publishRole: SortOrder
  role: SortOrder
  role_name: SortOrder
  type: SortOrder
  unpublishRole: SortOrder
  updateRole: SortOrder
}

enum RolesOrderByRelevanceFieldEnum {
  content
  createRole
  deleteRole
  publishRole
  role
  role_name
  type
  unpublishRole
  updateRole
}

input RolesOrderByRelevanceInput {
  fields: [RolesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RolesOrderByWithAggregationInput {
  _avg: RolesAvgOrderByAggregateInput
  _count: RolesCountOrderByAggregateInput
  _max: RolesMaxOrderByAggregateInput
  _min: RolesMinOrderByAggregateInput
  _sum: RolesSumOrderByAggregateInput
  content: SortOrder
  createRole: SortOrder
  created_at: SortOrder
  deleteRole: SortOrder
  id: SortOrder
  publishRole: SortOrder
  role: SortOrder
  role_name: SortOrder
  type: SortOrder
  unpublishRole: SortOrder
  updateRole: SortOrder
}

input RolesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RolesOrderByRelevanceInput
  content: SortOrder
  createRole: SortOrder
  created_at: SortOrder
  deleteRole: SortOrder
  id: SortOrder
  publishRole: SortOrder
  role: SortOrder
  role_name: SortOrder
  type: SortOrder
  unpublishRole: SortOrder
  updateRole: SortOrder
}

enum RolesScalarFieldEnum {
  content
  createRole
  created_at
  deleteRole
  id
  publishRole
  role
  role_name
  type
  unpublishRole
  updateRole
}

input RolesScalarWhereWithAggregatesInput {
  AND: [RolesScalarWhereWithAggregatesInput!]
  NOT: [RolesScalarWhereWithAggregatesInput!]
  OR: [RolesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  createRole: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  deleteRole: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  publishRole: StringNullableWithAggregatesFilter
  role: StringNullableWithAggregatesFilter
  role_name: StringWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  unpublishRole: StringNullableWithAggregatesFilter
  updateRole: StringNullableWithAggregatesFilter
}

type RolesSumAggregate {
  id: Int
}

input RolesSumOrderByAggregateInput {
  id: SortOrder
}

input RolesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  createRole: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  deleteRole: NullableStringFieldUpdateOperationsInput
  publishRole: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  unpublishRole: NullableStringFieldUpdateOperationsInput
  updateRole: NullableStringFieldUpdateOperationsInput
}

input RolesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createRole: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  deleteRole: NullableStringFieldUpdateOperationsInput
  publishRole: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  unpublishRole: NullableStringFieldUpdateOperationsInput
  updateRole: NullableStringFieldUpdateOperationsInput
}

input RolesWhereInput {
  AND: [RolesWhereInput!]
  NOT: [RolesWhereInput!]
  OR: [RolesWhereInput!]
  content: StringNullableFilter
  createRole: StringNullableFilter
  created_at: DateTimeNullableFilter
  deleteRole: StringNullableFilter
  id: IntFilter
  publishRole: StringNullableFilter
  role: StringNullableFilter
  role_name: StringFilter
  type: StringNullableFilter
  unpublishRole: StringNullableFilter
  updateRole: StringNullableFilter
}

input RolesWhereUniqueInput {
  id: Int
}

type Settings {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsAvgAggregate {
  id: Float
}

input SettingsAvgOrderByAggregateInput {
  id: SortOrder
}

type SettingsCountAggregate {
  _all: Int!
  address: Int!
  address_two: Int!
  allow_countries: Int!
  allow_state: Int!
  allowed_currency: Int!
  awsS3: Int!
  base_currency: Int!
  city: Int!
  country: Int!
  created_at: Int!
  databaseUrl: Int!
  default_country: Int!
  default_currency: Int!
  european_union_countries: Int!
  googleAnalytics: Int!
  id: Int!
  isPublic: Int!
  mailServer: Int!
  optional_zip: Int!
  region: Int!
  searchSetting: Int!
  sentryDsn: Int!
  siteName: Int!
  siteTagline: Int!
  siteWebsite: Int!
  state_required_for: Int!
  store_hours: Int!
  store_name: Int!
  store_phone: Int!
  top_destinations: Int!
  type: Int!
  vat_number: Int!
  zipcode: Int!
}

input SettingsCountOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

input SettingsCreateInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsCreateManyInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsGroupBy {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsMaxAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsMaxOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

type SettingsMinAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsMinOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

enum SettingsOrderByRelevanceFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  databaseUrl
  default_country
  default_currency
  european_union_countries
  googleAnalytics
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  zipcode
}

input SettingsOrderByRelevanceInput {
  fields: [SettingsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SettingsOrderByWithAggregationInput {
  _avg: SettingsAvgOrderByAggregateInput
  _count: SettingsCountOrderByAggregateInput
  _max: SettingsMaxOrderByAggregateInput
  _min: SettingsMinOrderByAggregateInput
  _sum: SettingsSumOrderByAggregateInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

input SettingsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SettingsOrderByRelevanceInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

enum SettingsScalarFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  created_at
  databaseUrl
  default_country
  default_currency
  european_union_countries
  googleAnalytics
  id
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  zipcode
}

input SettingsScalarWhereWithAggregatesInput {
  AND: [SettingsScalarWhereWithAggregatesInput!]
  NOT: [SettingsScalarWhereWithAggregatesInput!]
  OR: [SettingsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  address_two: StringNullableWithAggregatesFilter
  allow_countries: StringNullableWithAggregatesFilter
  allow_state: StringNullableWithAggregatesFilter
  allowed_currency: StringNullableWithAggregatesFilter
  awsS3: StringNullableWithAggregatesFilter
  base_currency: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  databaseUrl: StringNullableWithAggregatesFilter
  default_country: StringNullableWithAggregatesFilter
  default_currency: StringNullableWithAggregatesFilter
  european_union_countries: StringNullableWithAggregatesFilter
  googleAnalytics: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  mailServer: StringNullableWithAggregatesFilter
  optional_zip: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  searchSetting: StringNullableWithAggregatesFilter
  sentryDsn: StringNullableWithAggregatesFilter
  siteName: StringNullableWithAggregatesFilter
  siteTagline: StringNullableWithAggregatesFilter
  siteWebsite: StringNullableWithAggregatesFilter
  state_required_for: StringNullableWithAggregatesFilter
  store_hours: StringNullableWithAggregatesFilter
  store_name: StringNullableWithAggregatesFilter
  store_phone: StringNullableWithAggregatesFilter
  top_destinations: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  vat_number: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type SettingsSumAggregate {
  id: BigInt
}

input SettingsSumOrderByAggregateInput {
  id: SortOrder
}

input SettingsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  address: StringNullableFilter
  address_two: StringNullableFilter
  allow_countries: StringNullableFilter
  allow_state: StringNullableFilter
  allowed_currency: StringNullableFilter
  awsS3: StringNullableFilter
  base_currency: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  databaseUrl: StringNullableFilter
  default_country: StringNullableFilter
  default_currency: StringNullableFilter
  european_union_countries: StringNullableFilter
  googleAnalytics: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  mailServer: StringNullableFilter
  optional_zip: StringNullableFilter
  region: StringNullableFilter
  searchSetting: StringNullableFilter
  sentryDsn: StringNullableFilter
  siteName: StringNullableFilter
  siteTagline: StringNullableFilter
  siteWebsite: StringNullableFilter
  state_required_for: StringNullableFilter
  store_hours: StringNullableFilter
  store_name: StringNullableFilter
  store_phone: StringNullableFilter
  top_destinations: StringNullableFilter
  type: StringNullableFilter
  vat_number: StringNullableFilter
  zipcode: StringNullableFilter
}

input SettingsWhereUniqueInput {
  id: BigInt
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

type Tags {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsAvgAggregate {
  id: Float
}

input TagsAvgOrderByAggregateInput {
  id: SortOrder
}

type TagsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  customers: Int!
  excerpt: Int!
  id: Int!
  name: Int!
  products: Int!
  users: Int!
}

input TagsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsCreateInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  name: String!
  products: String
  users: String
}

input TagsCreateManyInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String!
  products: String
  users: String
}

type TagsGroupBy {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsMaxAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

type TagsMinAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsOrderByRelevanceFieldEnum {
  articles
  categories
  customers
  excerpt
  name
  products
  users
}

input TagsOrderByRelevanceInput {
  fields: [TagsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TagsOrderByWithAggregationInput {
  _avg: TagsAvgOrderByAggregateInput
  _count: TagsCountOrderByAggregateInput
  _max: TagsMaxOrderByAggregateInput
  _min: TagsMinOrderByAggregateInput
  _sum: TagsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TagsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsScalarFieldEnum {
  articles
  categories
  customers
  excerpt
  id
  name
  products
  users
}

input TagsScalarWhereWithAggregatesInput {
  AND: [TagsScalarWhereWithAggregatesInput!]
  NOT: [TagsScalarWhereWithAggregatesInput!]
  OR: [TagsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type TagsSumAggregate {
  id: Int
}

input TagsSumOrderByAggregateInput {
  id: SortOrder
}

input TagsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsWhereInput {
  AND: [TagsWhereInput!]
  NOT: [TagsWhereInput!]
  OR: [TagsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  customers: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  name: StringFilter
  products: StringNullableFilter
  users: StringNullableFilter
}

input TagsWhereUniqueInput {
  id: Int
}

type Themes {
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesAvgAggregate {
  id: Float
  website_id: Float
}

input ThemesAvgOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

type ThemesCountAggregate {
  _all: Int!
  action: Int!
  id: Int!
  parent_theme: Int!
  theme_path: Int!
  title: Int!
  website_id: Int!
  websites: Int!
}

input ThemesCountOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesCreateInput {
  action: String
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

input ThemesCreateManyInput {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesGroupBy {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesMaxAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMaxOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

type ThemesMinAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMinOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesOrderByRelevanceFieldEnum {
  action
  parent_theme
  theme_path
  title
  websites
}

input ThemesOrderByRelevanceInput {
  fields: [ThemesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ThemesOrderByWithAggregationInput {
  _avg: ThemesAvgOrderByAggregateInput
  _count: ThemesCountOrderByAggregateInput
  _max: ThemesMaxOrderByAggregateInput
  _min: ThemesMinOrderByAggregateInput
  _sum: ThemesSumOrderByAggregateInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ThemesOrderByRelevanceInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesScalarFieldEnum {
  action
  id
  parent_theme
  theme_path
  title
  website_id
  websites
}

input ThemesScalarWhereWithAggregatesInput {
  AND: [ThemesScalarWhereWithAggregatesInput!]
  NOT: [ThemesScalarWhereWithAggregatesInput!]
  OR: [ThemesScalarWhereWithAggregatesInput!]
  action: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  parent_theme: StringNullableWithAggregatesFilter
  theme_path: StringNullableWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
  website_id: BigIntWithAggregatesFilter
  websites: StringWithAggregatesFilter
}

type ThemesSumAggregate {
  id: Int
  website_id: BigInt
}

input ThemesSumOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

input ThemesUpdateInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesUpdateManyMutationInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesWhereInput {
  AND: [ThemesWhereInput!]
  NOT: [ThemesWhereInput!]
  OR: [ThemesWhereInput!]
  action: StringNullableFilter
  id: IntFilter
  parent_theme: StringNullableFilter
  theme_path: StringNullableFilter
  title: StringNullableFilter
  website_id: BigIntFilter
  websites: StringFilter
}

input ThemesWhereUniqueInput {
  id: Int
}

type Upload_file {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileAvgAggregate {
  created_by: Float
  height: Float
  id: Float
  size: Decimal
  updated_by: Float
  width: Float
}

input Upload_fileAvgOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

type Upload_fileCountAggregate {
  _all: Int!
  alternativeText: Int!
  caption: Int!
  created_at: Int!
  created_by: Int!
  ext: Int!
  formats: Int!
  hash: Int!
  height: Int!
  id: Int!
  mime: Int!
  name: Int!
  previewUrl: Int!
  provider: Int!
  provider_metadata: Int!
  size: Int!
  updated_at: Int!
  updated_by: Int!
  url: Int!
  width: Int!
}

input Upload_fileCountOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileCreateInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

input Upload_fileCreateManyInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileGroupBy {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileMaxAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMaxOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

type Upload_fileMinAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMinOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileOrderByRelevanceFieldEnum {
  alternativeText
  caption
  ext
  hash
  mime
  name
  previewUrl
  provider
  url
}

input Upload_fileOrderByRelevanceInput {
  fields: [Upload_fileOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Upload_fileOrderByWithAggregationInput {
  _avg: Upload_fileAvgOrderByAggregateInput
  _count: Upload_fileCountOrderByAggregateInput
  _max: Upload_fileMaxOrderByAggregateInput
  _min: Upload_fileMinOrderByAggregateInput
  _sum: Upload_fileSumOrderByAggregateInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Upload_fileOrderByRelevanceInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileScalarFieldEnum {
  alternativeText
  caption
  created_at
  created_by
  ext
  formats
  hash
  height
  id
  mime
  name
  previewUrl
  provider
  provider_metadata
  size
  updated_at
  updated_by
  url
  width
}

input Upload_fileScalarWhereWithAggregatesInput {
  AND: [Upload_fileScalarWhereWithAggregatesInput!]
  NOT: [Upload_fileScalarWhereWithAggregatesInput!]
  OR: [Upload_fileScalarWhereWithAggregatesInput!]
  alternativeText: StringNullableWithAggregatesFilter
  caption: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  created_by: IntNullableWithAggregatesFilter
  ext: StringNullableWithAggregatesFilter
  formats: JsonNullableWithAggregatesFilter
  hash: StringWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  mime: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  previewUrl: StringNullableWithAggregatesFilter
  provider: StringWithAggregatesFilter
  provider_metadata: JsonNullableWithAggregatesFilter
  size: DecimalWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
  updated_by: IntNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
  width: IntNullableWithAggregatesFilter
}

type Upload_fileSumAggregate {
  created_by: Int
  height: Int
  id: Int
  size: Decimal
  updated_by: Int
  width: Int
}

input Upload_fileSumOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

input Upload_fileUpdateInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileUpdateManyMutationInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileWhereInput {
  AND: [Upload_fileWhereInput!]
  NOT: [Upload_fileWhereInput!]
  OR: [Upload_fileWhereInput!]
  alternativeText: StringNullableFilter
  caption: StringNullableFilter
  created_at: DateTimeNullableFilter
  created_by: IntNullableFilter
  ext: StringNullableFilter
  formats: JsonNullableFilter
  hash: StringFilter
  height: IntNullableFilter
  id: IntFilter
  mime: StringFilter
  name: StringFilter
  previewUrl: StringNullableFilter
  provider: StringFilter
  provider_metadata: JsonNullableFilter
  size: DecimalFilter
  updated_at: DateTimeNullableFilter
  updated_by: IntNullableFilter
  url: StringFilter
  width: IntNullableFilter
}

input Upload_fileWhereUniqueInput {
  id: Int
}

type Users {
  created_at: DateTime
  email: String!
  first_name: String!
  id: BigInt!
  last_name: String
  mediamanager: String
  password: String!
  permissions: String
  phone: String
  username: String!
}

type UsersAvgAggregate {
  id: Float
}

input UsersAvgOrderByAggregateInput {
  id: SortOrder
}

type UsersCountAggregate {
  _all: Int!
  created_at: Int!
  email: Int!
  first_name: Int!
  id: Int!
  last_name: Int!
  mediamanager: Int!
  password: Int!
  permissions: Int!
  phone: Int!
  username: Int!
}

input UsersCountOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  password: SortOrder
  permissions: SortOrder
  phone: SortOrder
  username: SortOrder
}

input UsersCreateInput {
  created_at: DateTime
  email: String!
  first_name: String!
  id: BigInt
  last_name: String
  mediamanager: String
  password: String!
  permissions: String
  phone: String
  username: String!
}

input UsersCreateManyInput {
  created_at: DateTime
  email: String!
  first_name: String!
  id: BigInt
  last_name: String
  mediamanager: String
  password: String!
  permissions: String
  phone: String
  username: String!
}

type UsersGroupBy {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
  created_at: DateTime
  email: String!
  first_name: String!
  id: BigInt!
  last_name: String
  mediamanager: String
  password: String!
  permissions: String
  phone: String
  username: String!
}

type UsersMaxAggregate {
  created_at: DateTime
  email: String
  first_name: String
  id: BigInt
  last_name: String
  mediamanager: String
  password: String
  permissions: String
  phone: String
  username: String
}

input UsersMaxOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  password: SortOrder
  permissions: SortOrder
  phone: SortOrder
  username: SortOrder
}

type UsersMinAggregate {
  created_at: DateTime
  email: String
  first_name: String
  id: BigInt
  last_name: String
  mediamanager: String
  password: String
  permissions: String
  phone: String
  username: String
}

input UsersMinOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  password: SortOrder
  permissions: SortOrder
  phone: SortOrder
  username: SortOrder
}

enum UsersOrderByRelevanceFieldEnum {
  email
  first_name
  last_name
  mediamanager
  password
  permissions
  phone
  username
}

input UsersOrderByRelevanceInput {
  fields: [UsersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input UsersOrderByWithAggregationInput {
  _avg: UsersAvgOrderByAggregateInput
  _count: UsersCountOrderByAggregateInput
  _max: UsersMaxOrderByAggregateInput
  _min: UsersMinOrderByAggregateInput
  _sum: UsersSumOrderByAggregateInput
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  password: SortOrder
  permissions: SortOrder
  phone: SortOrder
  username: SortOrder
}

input UsersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: UsersOrderByRelevanceInput
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  password: SortOrder
  permissions: SortOrder
  phone: SortOrder
  username: SortOrder
}

enum UsersScalarFieldEnum {
  created_at
  email
  first_name
  id
  last_name
  mediamanager
  password
  permissions
  phone
  username
}

input UsersScalarWhereWithAggregatesInput {
  AND: [UsersScalarWhereWithAggregatesInput!]
  NOT: [UsersScalarWhereWithAggregatesInput!]
  OR: [UsersScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
  permissions: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  username: StringWithAggregatesFilter
}

type UsersSumAggregate {
  id: BigInt
}

input UsersSumOrderByAggregateInput {
  id: SortOrder
}

input UsersUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UsersUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  created_at: DateTimeNullableFilter
  email: StringFilter
  first_name: StringFilter
  id: BigIntFilter
  last_name: StringNullableFilter
  mediamanager: StringNullableFilter
  password: StringFilter
  permissions: StringNullableFilter
  phone: StringNullableFilter
  username: StringFilter
}

input UsersWhereUniqueInput {
  id: BigInt
}

type Webhooks {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksAvgAggregate {
  id: Float
}

input WebhooksAvgOrderByAggregateInput {
  id: SortOrder
}

type WebhooksCountAggregate {
  _all: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  headers: Int!
  id: Int!
  name: Int!
  publish: Int!
  retrieve: Int!
  unpublish: Int!
  update: Int!
  url: Int!
}

input WebhooksCountOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksCreateInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

input WebhooksCreateManyInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksGroupBy {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksMaxAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMaxOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

type WebhooksMinAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMinOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksOrderByRelevanceFieldEnum {
  create
  delete
  headers
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksOrderByRelevanceInput {
  fields: [WebhooksOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WebhooksOrderByWithAggregationInput {
  _avg: WebhooksAvgOrderByAggregateInput
  _count: WebhooksCountOrderByAggregateInput
  _max: WebhooksMaxOrderByAggregateInput
  _min: WebhooksMinOrderByAggregateInput
  _sum: WebhooksSumOrderByAggregateInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WebhooksOrderByRelevanceInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksScalarFieldEnum {
  create
  created_at
  delete
  headers
  id
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksScalarWhereWithAggregatesInput {
  AND: [WebhooksScalarWhereWithAggregatesInput!]
  NOT: [WebhooksScalarWhereWithAggregatesInput!]
  OR: [WebhooksScalarWhereWithAggregatesInput!]
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  headers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  publish: StringNullableWithAggregatesFilter
  retrieve: StringNullableWithAggregatesFilter
  unpublish: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
}

type WebhooksSumAggregate {
  id: BigInt
}

input WebhooksSumOrderByAggregateInput {
  id: SortOrder
}

input WebhooksUpdateInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksUpdateManyMutationInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksWhereInput {
  AND: [WebhooksWhereInput!]
  NOT: [WebhooksWhereInput!]
  OR: [WebhooksWhereInput!]
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  headers: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  publish: StringNullableFilter
  retrieve: StringNullableFilter
  unpublish: StringNullableFilter
  update: StringNullableFilter
  url: StringFilter
}

input WebhooksWhereUniqueInput {
  id: BigInt
}
