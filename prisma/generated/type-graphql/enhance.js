"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyInputTypesEnhanceMap = exports.applyOutputTypesEnhanceMap = exports.applyModelsEnhanceMap = exports.applyArgsTypesEnhanceMap = exports.applyResolversEnhanceMap = void 0;
const tslib_1 = require("tslib");
const tslib = tslib_1.__importStar(require("tslib"));
const crudResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-crud.index"));
const argsTypes = tslib_1.__importStar(require("./resolvers/crud/args.index"));
const actionResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-actions.index"));
const models = tslib_1.__importStar(require("./models"));
const outputTypes = tslib_1.__importStar(require("./resolvers/outputs"));
const inputTypes = tslib_1.__importStar(require("./resolvers/inputs"));
const crudResolversMap = {
    Apitoken: crudResolvers.ApitokenCrudResolver,
    Categories: crudResolvers.CategoriesCrudResolver,
    Content_type: crudResolvers.Content_typeCrudResolver,
    Customers: crudResolvers.CustomersCrudResolver,
    Dashboards: crudResolvers.DashboardsCrudResolver,
    Integrations: crudResolvers.IntegrationsCrudResolver,
    Internalization: crudResolvers.InternalizationCrudResolver,
    Mediamanager: crudResolvers.MediamanagerCrudResolver,
    Pages: crudResolvers.PagesCrudResolver,
    Permissions: crudResolvers.PermissionsCrudResolver,
    Plugins: crudResolvers.PluginsCrudResolver,
    Providers: crudResolvers.ProvidersCrudResolver,
    Roles: crudResolvers.RolesCrudResolver,
    Tags: crudResolvers.TagsCrudResolver,
    Themes: crudResolvers.ThemesCrudResolver,
    Upload_file: crudResolvers.Upload_fileCrudResolver,
    Users: crudResolvers.UsersCrudResolver,
    Webhooks: crudResolvers.WebhooksCrudResolver,
    Settings: crudResolvers.SettingsCrudResolver,
    LogIn: crudResolvers.LogInCrudResolver,
    Dashboardslist: crudResolvers.DashboardslistCrudResolver,
    Dashboardgraphql: crudResolvers.DashboardgraphqlCrudResolver,
    Dashboardrestapi: crudResolvers.DashboardrestapiCrudResolver,
    Dashboardslides: crudResolvers.DashboardslidesCrudResolver,
    Dashboardjson: crudResolvers.DashboardjsonCrudResolver,
    Agreements: crudResolvers.AgreementsCrudResolver
};
const actionResolversMap = {
    Apitoken: {
        aggregateApitoken: actionResolvers.AggregateApitokenResolver,
        createManyApitoken: actionResolvers.CreateManyApitokenResolver,
        createOneApitoken: actionResolvers.CreateOneApitokenResolver,
        deleteManyApitoken: actionResolvers.DeleteManyApitokenResolver,
        deleteOneApitoken: actionResolvers.DeleteOneApitokenResolver,
        findFirstApitoken: actionResolvers.FindFirstApitokenResolver,
        findFirstApitokenOrThrow: actionResolvers.FindFirstApitokenOrThrowResolver,
        apitokens: actionResolvers.FindManyApitokenResolver,
        apitoken: actionResolvers.FindUniqueApitokenResolver,
        getApitoken: actionResolvers.FindUniqueApitokenOrThrowResolver,
        groupByApitoken: actionResolvers.GroupByApitokenResolver,
        updateManyApitoken: actionResolvers.UpdateManyApitokenResolver,
        updateOneApitoken: actionResolvers.UpdateOneApitokenResolver,
        upsertOneApitoken: actionResolvers.UpsertOneApitokenResolver
    },
    Categories: {
        aggregateCategories: actionResolvers.AggregateCategoriesResolver,
        createManyCategories: actionResolvers.CreateManyCategoriesResolver,
        createOneCategories: actionResolvers.CreateOneCategoriesResolver,
        deleteManyCategories: actionResolvers.DeleteManyCategoriesResolver,
        deleteOneCategories: actionResolvers.DeleteOneCategoriesResolver,
        findFirstCategories: actionResolvers.FindFirstCategoriesResolver,
        findFirstCategoriesOrThrow: actionResolvers.FindFirstCategoriesOrThrowResolver,
        findManyCategories: actionResolvers.FindManyCategoriesResolver,
        findUniqueCategories: actionResolvers.FindUniqueCategoriesResolver,
        findUniqueCategoriesOrThrow: actionResolvers.FindUniqueCategoriesOrThrowResolver,
        groupByCategories: actionResolvers.GroupByCategoriesResolver,
        updateManyCategories: actionResolvers.UpdateManyCategoriesResolver,
        updateOneCategories: actionResolvers.UpdateOneCategoriesResolver,
        upsertOneCategories: actionResolvers.UpsertOneCategoriesResolver
    },
    Content_type: {
        aggregateContent_type: actionResolvers.AggregateContent_typeResolver,
        createManyContent_type: actionResolvers.CreateManyContent_typeResolver,
        createOneContent_type: actionResolvers.CreateOneContent_typeResolver,
        deleteManyContent_type: actionResolvers.DeleteManyContent_typeResolver,
        deleteOneContent_type: actionResolvers.DeleteOneContent_typeResolver,
        findFirstContent_type: actionResolvers.FindFirstContent_typeResolver,
        findFirstContent_typeOrThrow: actionResolvers.FindFirstContent_typeOrThrowResolver,
        content_types: actionResolvers.FindManyContent_typeResolver,
        content_type: actionResolvers.FindUniqueContent_typeResolver,
        getContent_type: actionResolvers.FindUniqueContent_typeOrThrowResolver,
        groupByContent_type: actionResolvers.GroupByContent_typeResolver,
        updateManyContent_type: actionResolvers.UpdateManyContent_typeResolver,
        updateOneContent_type: actionResolvers.UpdateOneContent_typeResolver,
        upsertOneContent_type: actionResolvers.UpsertOneContent_typeResolver
    },
    Customers: {
        aggregateCustomers: actionResolvers.AggregateCustomersResolver,
        createManyCustomers: actionResolvers.CreateManyCustomersResolver,
        createOneCustomers: actionResolvers.CreateOneCustomersResolver,
        deleteManyCustomers: actionResolvers.DeleteManyCustomersResolver,
        deleteOneCustomers: actionResolvers.DeleteOneCustomersResolver,
        findFirstCustomers: actionResolvers.FindFirstCustomersResolver,
        findFirstCustomersOrThrow: actionResolvers.FindFirstCustomersOrThrowResolver,
        findManyCustomers: actionResolvers.FindManyCustomersResolver,
        findUniqueCustomers: actionResolvers.FindUniqueCustomersResolver,
        findUniqueCustomersOrThrow: actionResolvers.FindUniqueCustomersOrThrowResolver,
        groupByCustomers: actionResolvers.GroupByCustomersResolver,
        updateManyCustomers: actionResolvers.UpdateManyCustomersResolver,
        updateOneCustomers: actionResolvers.UpdateOneCustomersResolver,
        upsertOneCustomers: actionResolvers.UpsertOneCustomersResolver
    },
    Dashboards: {
        aggregateDashboards: actionResolvers.AggregateDashboardsResolver,
        createManyDashboards: actionResolvers.CreateManyDashboardsResolver,
        createOneDashboards: actionResolvers.CreateOneDashboardsResolver,
        deleteManyDashboards: actionResolvers.DeleteManyDashboardsResolver,
        deleteOneDashboards: actionResolvers.DeleteOneDashboardsResolver,
        findFirstDashboards: actionResolvers.FindFirstDashboardsResolver,
        findFirstDashboardsOrThrow: actionResolvers.FindFirstDashboardsOrThrowResolver,
        findManyDashboards: actionResolvers.FindManyDashboardsResolver,
        findUniqueDashboards: actionResolvers.FindUniqueDashboardsResolver,
        findUniqueDashboardsOrThrow: actionResolvers.FindUniqueDashboardsOrThrowResolver,
        groupByDashboards: actionResolvers.GroupByDashboardsResolver,
        updateManyDashboards: actionResolvers.UpdateManyDashboardsResolver,
        updateOneDashboards: actionResolvers.UpdateOneDashboardsResolver,
        upsertOneDashboards: actionResolvers.UpsertOneDashboardsResolver
    },
    Integrations: {
        aggregateIntegrations: actionResolvers.AggregateIntegrationsResolver,
        createManyIntegrations: actionResolvers.CreateManyIntegrationsResolver,
        createOneIntegrations: actionResolvers.CreateOneIntegrationsResolver,
        deleteManyIntegrations: actionResolvers.DeleteManyIntegrationsResolver,
        deleteOneIntegrations: actionResolvers.DeleteOneIntegrationsResolver,
        findFirstIntegrations: actionResolvers.FindFirstIntegrationsResolver,
        findFirstIntegrationsOrThrow: actionResolvers.FindFirstIntegrationsOrThrowResolver,
        findManyIntegrations: actionResolvers.FindManyIntegrationsResolver,
        findUniqueIntegrations: actionResolvers.FindUniqueIntegrationsResolver,
        findUniqueIntegrationsOrThrow: actionResolvers.FindUniqueIntegrationsOrThrowResolver,
        groupByIntegrations: actionResolvers.GroupByIntegrationsResolver,
        updateManyIntegrations: actionResolvers.UpdateManyIntegrationsResolver,
        updateOneIntegrations: actionResolvers.UpdateOneIntegrationsResolver,
        upsertOneIntegrations: actionResolvers.UpsertOneIntegrationsResolver
    },
    Internalization: {
        aggregateInternalization: actionResolvers.AggregateInternalizationResolver,
        createManyInternalization: actionResolvers.CreateManyInternalizationResolver,
        createOneInternalization: actionResolvers.CreateOneInternalizationResolver,
        deleteManyInternalization: actionResolvers.DeleteManyInternalizationResolver,
        deleteOneInternalization: actionResolvers.DeleteOneInternalizationResolver,
        findFirstInternalization: actionResolvers.FindFirstInternalizationResolver,
        findFirstInternalizationOrThrow: actionResolvers.FindFirstInternalizationOrThrowResolver,
        internalizations: actionResolvers.FindManyInternalizationResolver,
        internalization: actionResolvers.FindUniqueInternalizationResolver,
        getInternalization: actionResolvers.FindUniqueInternalizationOrThrowResolver,
        groupByInternalization: actionResolvers.GroupByInternalizationResolver,
        updateManyInternalization: actionResolvers.UpdateManyInternalizationResolver,
        updateOneInternalization: actionResolvers.UpdateOneInternalizationResolver,
        upsertOneInternalization: actionResolvers.UpsertOneInternalizationResolver
    },
    Mediamanager: {
        aggregateMediamanager: actionResolvers.AggregateMediamanagerResolver,
        createManyMediamanager: actionResolvers.CreateManyMediamanagerResolver,
        createOneMediamanager: actionResolvers.CreateOneMediamanagerResolver,
        deleteManyMediamanager: actionResolvers.DeleteManyMediamanagerResolver,
        deleteOneMediamanager: actionResolvers.DeleteOneMediamanagerResolver,
        findFirstMediamanager: actionResolvers.FindFirstMediamanagerResolver,
        findFirstMediamanagerOrThrow: actionResolvers.FindFirstMediamanagerOrThrowResolver,
        mediamanagers: actionResolvers.FindManyMediamanagerResolver,
        mediamanager: actionResolvers.FindUniqueMediamanagerResolver,
        getMediamanager: actionResolvers.FindUniqueMediamanagerOrThrowResolver,
        groupByMediamanager: actionResolvers.GroupByMediamanagerResolver,
        updateManyMediamanager: actionResolvers.UpdateManyMediamanagerResolver,
        updateOneMediamanager: actionResolvers.UpdateOneMediamanagerResolver,
        upsertOneMediamanager: actionResolvers.UpsertOneMediamanagerResolver
    },
    Pages: {
        aggregatePages: actionResolvers.AggregatePagesResolver,
        createManyPages: actionResolvers.CreateManyPagesResolver,
        createOnePages: actionResolvers.CreateOnePagesResolver,
        deleteManyPages: actionResolvers.DeleteManyPagesResolver,
        deleteOnePages: actionResolvers.DeleteOnePagesResolver,
        findFirstPages: actionResolvers.FindFirstPagesResolver,
        findFirstPagesOrThrow: actionResolvers.FindFirstPagesOrThrowResolver,
        findManyPages: actionResolvers.FindManyPagesResolver,
        findUniquePages: actionResolvers.FindUniquePagesResolver,
        findUniquePagesOrThrow: actionResolvers.FindUniquePagesOrThrowResolver,
        groupByPages: actionResolvers.GroupByPagesResolver,
        updateManyPages: actionResolvers.UpdateManyPagesResolver,
        updateOnePages: actionResolvers.UpdateOnePagesResolver,
        upsertOnePages: actionResolvers.UpsertOnePagesResolver
    },
    Permissions: {
        aggregatePermissions: actionResolvers.AggregatePermissionsResolver,
        createManyPermissions: actionResolvers.CreateManyPermissionsResolver,
        createOnePermissions: actionResolvers.CreateOnePermissionsResolver,
        deleteManyPermissions: actionResolvers.DeleteManyPermissionsResolver,
        deleteOnePermissions: actionResolvers.DeleteOnePermissionsResolver,
        findFirstPermissions: actionResolvers.FindFirstPermissionsResolver,
        findFirstPermissionsOrThrow: actionResolvers.FindFirstPermissionsOrThrowResolver,
        findManyPermissions: actionResolvers.FindManyPermissionsResolver,
        findUniquePermissions: actionResolvers.FindUniquePermissionsResolver,
        findUniquePermissionsOrThrow: actionResolvers.FindUniquePermissionsOrThrowResolver,
        groupByPermissions: actionResolvers.GroupByPermissionsResolver,
        updateManyPermissions: actionResolvers.UpdateManyPermissionsResolver,
        updateOnePermissions: actionResolvers.UpdateOnePermissionsResolver,
        upsertOnePermissions: actionResolvers.UpsertOnePermissionsResolver
    },
    Plugins: {
        aggregatePlugins: actionResolvers.AggregatePluginsResolver,
        createManyPlugins: actionResolvers.CreateManyPluginsResolver,
        createOnePlugins: actionResolvers.CreateOnePluginsResolver,
        deleteManyPlugins: actionResolvers.DeleteManyPluginsResolver,
        deleteOnePlugins: actionResolvers.DeleteOnePluginsResolver,
        findFirstPlugins: actionResolvers.FindFirstPluginsResolver,
        findFirstPluginsOrThrow: actionResolvers.FindFirstPluginsOrThrowResolver,
        findManyPlugins: actionResolvers.FindManyPluginsResolver,
        findUniquePlugins: actionResolvers.FindUniquePluginsResolver,
        findUniquePluginsOrThrow: actionResolvers.FindUniquePluginsOrThrowResolver,
        groupByPlugins: actionResolvers.GroupByPluginsResolver,
        updateManyPlugins: actionResolvers.UpdateManyPluginsResolver,
        updateOnePlugins: actionResolvers.UpdateOnePluginsResolver,
        upsertOnePlugins: actionResolvers.UpsertOnePluginsResolver
    },
    Providers: {
        aggregateProviders: actionResolvers.AggregateProvidersResolver,
        createManyProviders: actionResolvers.CreateManyProvidersResolver,
        createOneProviders: actionResolvers.CreateOneProvidersResolver,
        deleteManyProviders: actionResolvers.DeleteManyProvidersResolver,
        deleteOneProviders: actionResolvers.DeleteOneProvidersResolver,
        findFirstProviders: actionResolvers.FindFirstProvidersResolver,
        findFirstProvidersOrThrow: actionResolvers.FindFirstProvidersOrThrowResolver,
        findManyProviders: actionResolvers.FindManyProvidersResolver,
        findUniqueProviders: actionResolvers.FindUniqueProvidersResolver,
        findUniqueProvidersOrThrow: actionResolvers.FindUniqueProvidersOrThrowResolver,
        groupByProviders: actionResolvers.GroupByProvidersResolver,
        updateManyProviders: actionResolvers.UpdateManyProvidersResolver,
        updateOneProviders: actionResolvers.UpdateOneProvidersResolver,
        upsertOneProviders: actionResolvers.UpsertOneProvidersResolver
    },
    Roles: {
        aggregateRoles: actionResolvers.AggregateRolesResolver,
        createManyRoles: actionResolvers.CreateManyRolesResolver,
        createOneRoles: actionResolvers.CreateOneRolesResolver,
        deleteManyRoles: actionResolvers.DeleteManyRolesResolver,
        deleteOneRoles: actionResolvers.DeleteOneRolesResolver,
        findFirstRoles: actionResolvers.FindFirstRolesResolver,
        findFirstRolesOrThrow: actionResolvers.FindFirstRolesOrThrowResolver,
        findManyRoles: actionResolvers.FindManyRolesResolver,
        findUniqueRoles: actionResolvers.FindUniqueRolesResolver,
        findUniqueRolesOrThrow: actionResolvers.FindUniqueRolesOrThrowResolver,
        groupByRoles: actionResolvers.GroupByRolesResolver,
        updateManyRoles: actionResolvers.UpdateManyRolesResolver,
        updateOneRoles: actionResolvers.UpdateOneRolesResolver,
        upsertOneRoles: actionResolvers.UpsertOneRolesResolver
    },
    Tags: {
        aggregateTags: actionResolvers.AggregateTagsResolver,
        createManyTags: actionResolvers.CreateManyTagsResolver,
        createOneTags: actionResolvers.CreateOneTagsResolver,
        deleteManyTags: actionResolvers.DeleteManyTagsResolver,
        deleteOneTags: actionResolvers.DeleteOneTagsResolver,
        findFirstTags: actionResolvers.FindFirstTagsResolver,
        findFirstTagsOrThrow: actionResolvers.FindFirstTagsOrThrowResolver,
        findManyTags: actionResolvers.FindManyTagsResolver,
        findUniqueTags: actionResolvers.FindUniqueTagsResolver,
        findUniqueTagsOrThrow: actionResolvers.FindUniqueTagsOrThrowResolver,
        groupByTags: actionResolvers.GroupByTagsResolver,
        updateManyTags: actionResolvers.UpdateManyTagsResolver,
        updateOneTags: actionResolvers.UpdateOneTagsResolver,
        upsertOneTags: actionResolvers.UpsertOneTagsResolver
    },
    Themes: {
        aggregateThemes: actionResolvers.AggregateThemesResolver,
        createManyThemes: actionResolvers.CreateManyThemesResolver,
        createOneThemes: actionResolvers.CreateOneThemesResolver,
        deleteManyThemes: actionResolvers.DeleteManyThemesResolver,
        deleteOneThemes: actionResolvers.DeleteOneThemesResolver,
        findFirstThemes: actionResolvers.FindFirstThemesResolver,
        findFirstThemesOrThrow: actionResolvers.FindFirstThemesOrThrowResolver,
        findManyThemes: actionResolvers.FindManyThemesResolver,
        findUniqueThemes: actionResolvers.FindUniqueThemesResolver,
        findUniqueThemesOrThrow: actionResolvers.FindUniqueThemesOrThrowResolver,
        groupByThemes: actionResolvers.GroupByThemesResolver,
        updateManyThemes: actionResolvers.UpdateManyThemesResolver,
        updateOneThemes: actionResolvers.UpdateOneThemesResolver,
        upsertOneThemes: actionResolvers.UpsertOneThemesResolver
    },
    Upload_file: {
        aggregateUpload_file: actionResolvers.AggregateUpload_fileResolver,
        createManyUpload_file: actionResolvers.CreateManyUpload_fileResolver,
        createOneUpload_file: actionResolvers.CreateOneUpload_fileResolver,
        deleteManyUpload_file: actionResolvers.DeleteManyUpload_fileResolver,
        deleteOneUpload_file: actionResolvers.DeleteOneUpload_fileResolver,
        findFirstUpload_file: actionResolvers.FindFirstUpload_fileResolver,
        findFirstUpload_fileOrThrow: actionResolvers.FindFirstUpload_fileOrThrowResolver,
        upload_files: actionResolvers.FindManyUpload_fileResolver,
        upload_file: actionResolvers.FindUniqueUpload_fileResolver,
        getUpload_file: actionResolvers.FindUniqueUpload_fileOrThrowResolver,
        groupByUpload_file: actionResolvers.GroupByUpload_fileResolver,
        updateManyUpload_file: actionResolvers.UpdateManyUpload_fileResolver,
        updateOneUpload_file: actionResolvers.UpdateOneUpload_fileResolver,
        upsertOneUpload_file: actionResolvers.UpsertOneUpload_fileResolver
    },
    Users: {
        aggregateUsers: actionResolvers.AggregateUsersResolver,
        createManyUsers: actionResolvers.CreateManyUsersResolver,
        createOneUsers: actionResolvers.CreateOneUsersResolver,
        deleteManyUsers: actionResolvers.DeleteManyUsersResolver,
        deleteOneUsers: actionResolvers.DeleteOneUsersResolver,
        findFirstUsers: actionResolvers.FindFirstUsersResolver,
        findFirstUsersOrThrow: actionResolvers.FindFirstUsersOrThrowResolver,
        findManyUsers: actionResolvers.FindManyUsersResolver,
        findUniqueUsers: actionResolvers.FindUniqueUsersResolver,
        findUniqueUsersOrThrow: actionResolvers.FindUniqueUsersOrThrowResolver,
        groupByUsers: actionResolvers.GroupByUsersResolver,
        updateManyUsers: actionResolvers.UpdateManyUsersResolver,
        updateOneUsers: actionResolvers.UpdateOneUsersResolver,
        upsertOneUsers: actionResolvers.UpsertOneUsersResolver
    },
    Webhooks: {
        aggregateWebhooks: actionResolvers.AggregateWebhooksResolver,
        createManyWebhooks: actionResolvers.CreateManyWebhooksResolver,
        createOneWebhooks: actionResolvers.CreateOneWebhooksResolver,
        deleteManyWebhooks: actionResolvers.DeleteManyWebhooksResolver,
        deleteOneWebhooks: actionResolvers.DeleteOneWebhooksResolver,
        findFirstWebhooks: actionResolvers.FindFirstWebhooksResolver,
        findFirstWebhooksOrThrow: actionResolvers.FindFirstWebhooksOrThrowResolver,
        findManyWebhooks: actionResolvers.FindManyWebhooksResolver,
        findUniqueWebhooks: actionResolvers.FindUniqueWebhooksResolver,
        findUniqueWebhooksOrThrow: actionResolvers.FindUniqueWebhooksOrThrowResolver,
        groupByWebhooks: actionResolvers.GroupByWebhooksResolver,
        updateManyWebhooks: actionResolvers.UpdateManyWebhooksResolver,
        updateOneWebhooks: actionResolvers.UpdateOneWebhooksResolver,
        upsertOneWebhooks: actionResolvers.UpsertOneWebhooksResolver
    },
    Settings: {
        aggregateSettings: actionResolvers.AggregateSettingsResolver,
        createManySettings: actionResolvers.CreateManySettingsResolver,
        createOneSettings: actionResolvers.CreateOneSettingsResolver,
        deleteManySettings: actionResolvers.DeleteManySettingsResolver,
        deleteOneSettings: actionResolvers.DeleteOneSettingsResolver,
        findFirstSettings: actionResolvers.FindFirstSettingsResolver,
        findFirstSettingsOrThrow: actionResolvers.FindFirstSettingsOrThrowResolver,
        findManySettings: actionResolvers.FindManySettingsResolver,
        findUniqueSettings: actionResolvers.FindUniqueSettingsResolver,
        findUniqueSettingsOrThrow: actionResolvers.FindUniqueSettingsOrThrowResolver,
        groupBySettings: actionResolvers.GroupBySettingsResolver,
        updateManySettings: actionResolvers.UpdateManySettingsResolver,
        updateOneSettings: actionResolvers.UpdateOneSettingsResolver,
        upsertOneSettings: actionResolvers.UpsertOneSettingsResolver
    },
    LogIn: {
        aggregateLogIn: actionResolvers.AggregateLogInResolver,
        createManyLogIn: actionResolvers.CreateManyLogInResolver,
        createOneLogIn: actionResolvers.CreateOneLogInResolver,
        deleteManyLogIn: actionResolvers.DeleteManyLogInResolver,
        deleteOneLogIn: actionResolvers.DeleteOneLogInResolver,
        findFirstLogIn: actionResolvers.FindFirstLogInResolver,
        findFirstLogInOrThrow: actionResolvers.FindFirstLogInOrThrowResolver,
        logIns: actionResolvers.FindManyLogInResolver,
        logIn: actionResolvers.FindUniqueLogInResolver,
        getLogIn: actionResolvers.FindUniqueLogInOrThrowResolver,
        groupByLogIn: actionResolvers.GroupByLogInResolver,
        updateManyLogIn: actionResolvers.UpdateManyLogInResolver,
        updateOneLogIn: actionResolvers.UpdateOneLogInResolver,
        upsertOneLogIn: actionResolvers.UpsertOneLogInResolver
    },
    Dashboardslist: {
        aggregateDashboardslist: actionResolvers.AggregateDashboardslistResolver,
        createManyDashboardslist: actionResolvers.CreateManyDashboardslistResolver,
        createOneDashboardslist: actionResolvers.CreateOneDashboardslistResolver,
        deleteManyDashboardslist: actionResolvers.DeleteManyDashboardslistResolver,
        deleteOneDashboardslist: actionResolvers.DeleteOneDashboardslistResolver,
        findFirstDashboardslist: actionResolvers.FindFirstDashboardslistResolver,
        findFirstDashboardslistOrThrow: actionResolvers.FindFirstDashboardslistOrThrowResolver,
        dashboardslists: actionResolvers.FindManyDashboardslistResolver,
        dashboardslist: actionResolvers.FindUniqueDashboardslistResolver,
        getDashboardslist: actionResolvers.FindUniqueDashboardslistOrThrowResolver,
        groupByDashboardslist: actionResolvers.GroupByDashboardslistResolver,
        updateManyDashboardslist: actionResolvers.UpdateManyDashboardslistResolver,
        updateOneDashboardslist: actionResolvers.UpdateOneDashboardslistResolver,
        upsertOneDashboardslist: actionResolvers.UpsertOneDashboardslistResolver
    },
    Dashboardgraphql: {
        aggregateDashboardgraphql: actionResolvers.AggregateDashboardgraphqlResolver,
        createManyDashboardgraphql: actionResolvers.CreateManyDashboardgraphqlResolver,
        createOneDashboardgraphql: actionResolvers.CreateOneDashboardgraphqlResolver,
        deleteManyDashboardgraphql: actionResolvers.DeleteManyDashboardgraphqlResolver,
        deleteOneDashboardgraphql: actionResolvers.DeleteOneDashboardgraphqlResolver,
        findFirstDashboardgraphql: actionResolvers.FindFirstDashboardgraphqlResolver,
        findFirstDashboardgraphqlOrThrow: actionResolvers.FindFirstDashboardgraphqlOrThrowResolver,
        dashboardgraphqls: actionResolvers.FindManyDashboardgraphqlResolver,
        dashboardgraphql: actionResolvers.FindUniqueDashboardgraphqlResolver,
        getDashboardgraphql: actionResolvers.FindUniqueDashboardgraphqlOrThrowResolver,
        groupByDashboardgraphql: actionResolvers.GroupByDashboardgraphqlResolver,
        updateManyDashboardgraphql: actionResolvers.UpdateManyDashboardgraphqlResolver,
        updateOneDashboardgraphql: actionResolvers.UpdateOneDashboardgraphqlResolver,
        upsertOneDashboardgraphql: actionResolvers.UpsertOneDashboardgraphqlResolver
    },
    Dashboardrestapi: {
        aggregateDashboardrestapi: actionResolvers.AggregateDashboardrestapiResolver,
        createManyDashboardrestapi: actionResolvers.CreateManyDashboardrestapiResolver,
        createOneDashboardrestapi: actionResolvers.CreateOneDashboardrestapiResolver,
        deleteManyDashboardrestapi: actionResolvers.DeleteManyDashboardrestapiResolver,
        deleteOneDashboardrestapi: actionResolvers.DeleteOneDashboardrestapiResolver,
        findFirstDashboardrestapi: actionResolvers.FindFirstDashboardrestapiResolver,
        findFirstDashboardrestapiOrThrow: actionResolvers.FindFirstDashboardrestapiOrThrowResolver,
        dashboardrestapis: actionResolvers.FindManyDashboardrestapiResolver,
        dashboardrestapi: actionResolvers.FindUniqueDashboardrestapiResolver,
        getDashboardrestapi: actionResolvers.FindUniqueDashboardrestapiOrThrowResolver,
        groupByDashboardrestapi: actionResolvers.GroupByDashboardrestapiResolver,
        updateManyDashboardrestapi: actionResolvers.UpdateManyDashboardrestapiResolver,
        updateOneDashboardrestapi: actionResolvers.UpdateOneDashboardrestapiResolver,
        upsertOneDashboardrestapi: actionResolvers.UpsertOneDashboardrestapiResolver
    },
    Dashboardslides: {
        aggregateDashboardslides: actionResolvers.AggregateDashboardslidesResolver,
        createManyDashboardslides: actionResolvers.CreateManyDashboardslidesResolver,
        createOneDashboardslides: actionResolvers.CreateOneDashboardslidesResolver,
        deleteManyDashboardslides: actionResolvers.DeleteManyDashboardslidesResolver,
        deleteOneDashboardslides: actionResolvers.DeleteOneDashboardslidesResolver,
        findFirstDashboardslides: actionResolvers.FindFirstDashboardslidesResolver,
        findFirstDashboardslidesOrThrow: actionResolvers.FindFirstDashboardslidesOrThrowResolver,
        findManyDashboardslides: actionResolvers.FindManyDashboardslidesResolver,
        findUniqueDashboardslides: actionResolvers.FindUniqueDashboardslidesResolver,
        findUniqueDashboardslidesOrThrow: actionResolvers.FindUniqueDashboardslidesOrThrowResolver,
        groupByDashboardslides: actionResolvers.GroupByDashboardslidesResolver,
        updateManyDashboardslides: actionResolvers.UpdateManyDashboardslidesResolver,
        updateOneDashboardslides: actionResolvers.UpdateOneDashboardslidesResolver,
        upsertOneDashboardslides: actionResolvers.UpsertOneDashboardslidesResolver
    },
    Dashboardjson: {
        aggregateDashboardjson: actionResolvers.AggregateDashboardjsonResolver,
        createManyDashboardjson: actionResolvers.CreateManyDashboardjsonResolver,
        createOneDashboardjson: actionResolvers.CreateOneDashboardjsonResolver,
        deleteManyDashboardjson: actionResolvers.DeleteManyDashboardjsonResolver,
        deleteOneDashboardjson: actionResolvers.DeleteOneDashboardjsonResolver,
        findFirstDashboardjson: actionResolvers.FindFirstDashboardjsonResolver,
        findFirstDashboardjsonOrThrow: actionResolvers.FindFirstDashboardjsonOrThrowResolver,
        dashboardjsons: actionResolvers.FindManyDashboardjsonResolver,
        dashboardjson: actionResolvers.FindUniqueDashboardjsonResolver,
        getDashboardjson: actionResolvers.FindUniqueDashboardjsonOrThrowResolver,
        groupByDashboardjson: actionResolvers.GroupByDashboardjsonResolver,
        updateManyDashboardjson: actionResolvers.UpdateManyDashboardjsonResolver,
        updateOneDashboardjson: actionResolvers.UpdateOneDashboardjsonResolver,
        upsertOneDashboardjson: actionResolvers.UpsertOneDashboardjsonResolver
    },
    Agreements: {
        aggregateAgreements: actionResolvers.AggregateAgreementsResolver,
        createManyAgreements: actionResolvers.CreateManyAgreementsResolver,
        createOneAgreements: actionResolvers.CreateOneAgreementsResolver,
        deleteManyAgreements: actionResolvers.DeleteManyAgreementsResolver,
        deleteOneAgreements: actionResolvers.DeleteOneAgreementsResolver,
        findFirstAgreements: actionResolvers.FindFirstAgreementsResolver,
        findFirstAgreementsOrThrow: actionResolvers.FindFirstAgreementsOrThrowResolver,
        findManyAgreements: actionResolvers.FindManyAgreementsResolver,
        findUniqueAgreements: actionResolvers.FindUniqueAgreementsResolver,
        findUniqueAgreementsOrThrow: actionResolvers.FindUniqueAgreementsOrThrowResolver,
        groupByAgreements: actionResolvers.GroupByAgreementsResolver,
        updateManyAgreements: actionResolvers.UpdateManyAgreementsResolver,
        updateOneAgreements: actionResolvers.UpdateOneAgreementsResolver,
        upsertOneAgreements: actionResolvers.UpsertOneAgreementsResolver
    }
};
const crudResolversInfo = {
    Apitoken: ["aggregateApitoken", "createManyApitoken", "createOneApitoken", "deleteManyApitoken", "deleteOneApitoken", "findFirstApitoken", "findFirstApitokenOrThrow", "apitokens", "apitoken", "getApitoken", "groupByApitoken", "updateManyApitoken", "updateOneApitoken", "upsertOneApitoken"],
    Categories: ["aggregateCategories", "createManyCategories", "createOneCategories", "deleteManyCategories", "deleteOneCategories", "findFirstCategories", "findFirstCategoriesOrThrow", "findManyCategories", "findUniqueCategories", "findUniqueCategoriesOrThrow", "groupByCategories", "updateManyCategories", "updateOneCategories", "upsertOneCategories"],
    Content_type: ["aggregateContent_type", "createManyContent_type", "createOneContent_type", "deleteManyContent_type", "deleteOneContent_type", "findFirstContent_type", "findFirstContent_typeOrThrow", "content_types", "content_type", "getContent_type", "groupByContent_type", "updateManyContent_type", "updateOneContent_type", "upsertOneContent_type"],
    Customers: ["aggregateCustomers", "createManyCustomers", "createOneCustomers", "deleteManyCustomers", "deleteOneCustomers", "findFirstCustomers", "findFirstCustomersOrThrow", "findManyCustomers", "findUniqueCustomers", "findUniqueCustomersOrThrow", "groupByCustomers", "updateManyCustomers", "updateOneCustomers", "upsertOneCustomers"],
    Dashboards: ["aggregateDashboards", "createManyDashboards", "createOneDashboards", "deleteManyDashboards", "deleteOneDashboards", "findFirstDashboards", "findFirstDashboardsOrThrow", "findManyDashboards", "findUniqueDashboards", "findUniqueDashboardsOrThrow", "groupByDashboards", "updateManyDashboards", "updateOneDashboards", "upsertOneDashboards"],
    Integrations: ["aggregateIntegrations", "createManyIntegrations", "createOneIntegrations", "deleteManyIntegrations", "deleteOneIntegrations", "findFirstIntegrations", "findFirstIntegrationsOrThrow", "findManyIntegrations", "findUniqueIntegrations", "findUniqueIntegrationsOrThrow", "groupByIntegrations", "updateManyIntegrations", "updateOneIntegrations", "upsertOneIntegrations"],
    Internalization: ["aggregateInternalization", "createManyInternalization", "createOneInternalization", "deleteManyInternalization", "deleteOneInternalization", "findFirstInternalization", "findFirstInternalizationOrThrow", "internalizations", "internalization", "getInternalization", "groupByInternalization", "updateManyInternalization", "updateOneInternalization", "upsertOneInternalization"],
    Mediamanager: ["aggregateMediamanager", "createManyMediamanager", "createOneMediamanager", "deleteManyMediamanager", "deleteOneMediamanager", "findFirstMediamanager", "findFirstMediamanagerOrThrow", "mediamanagers", "mediamanager", "getMediamanager", "groupByMediamanager", "updateManyMediamanager", "updateOneMediamanager", "upsertOneMediamanager"],
    Pages: ["aggregatePages", "createManyPages", "createOnePages", "deleteManyPages", "deleteOnePages", "findFirstPages", "findFirstPagesOrThrow", "findManyPages", "findUniquePages", "findUniquePagesOrThrow", "groupByPages", "updateManyPages", "updateOnePages", "upsertOnePages"],
    Permissions: ["aggregatePermissions", "createManyPermissions", "createOnePermissions", "deleteManyPermissions", "deleteOnePermissions", "findFirstPermissions", "findFirstPermissionsOrThrow", "findManyPermissions", "findUniquePermissions", "findUniquePermissionsOrThrow", "groupByPermissions", "updateManyPermissions", "updateOnePermissions", "upsertOnePermissions"],
    Plugins: ["aggregatePlugins", "createManyPlugins", "createOnePlugins", "deleteManyPlugins", "deleteOnePlugins", "findFirstPlugins", "findFirstPluginsOrThrow", "findManyPlugins", "findUniquePlugins", "findUniquePluginsOrThrow", "groupByPlugins", "updateManyPlugins", "updateOnePlugins", "upsertOnePlugins"],
    Providers: ["aggregateProviders", "createManyProviders", "createOneProviders", "deleteManyProviders", "deleteOneProviders", "findFirstProviders", "findFirstProvidersOrThrow", "findManyProviders", "findUniqueProviders", "findUniqueProvidersOrThrow", "groupByProviders", "updateManyProviders", "updateOneProviders", "upsertOneProviders"],
    Roles: ["aggregateRoles", "createManyRoles", "createOneRoles", "deleteManyRoles", "deleteOneRoles", "findFirstRoles", "findFirstRolesOrThrow", "findManyRoles", "findUniqueRoles", "findUniqueRolesOrThrow", "groupByRoles", "updateManyRoles", "updateOneRoles", "upsertOneRoles"],
    Tags: ["aggregateTags", "createManyTags", "createOneTags", "deleteManyTags", "deleteOneTags", "findFirstTags", "findFirstTagsOrThrow", "findManyTags", "findUniqueTags", "findUniqueTagsOrThrow", "groupByTags", "updateManyTags", "updateOneTags", "upsertOneTags"],
    Themes: ["aggregateThemes", "createManyThemes", "createOneThemes", "deleteManyThemes", "deleteOneThemes", "findFirstThemes", "findFirstThemesOrThrow", "findManyThemes", "findUniqueThemes", "findUniqueThemesOrThrow", "groupByThemes", "updateManyThemes", "updateOneThemes", "upsertOneThemes"],
    Upload_file: ["aggregateUpload_file", "createManyUpload_file", "createOneUpload_file", "deleteManyUpload_file", "deleteOneUpload_file", "findFirstUpload_file", "findFirstUpload_fileOrThrow", "upload_files", "upload_file", "getUpload_file", "groupByUpload_file", "updateManyUpload_file", "updateOneUpload_file", "upsertOneUpload_file"],
    Users: ["aggregateUsers", "createManyUsers", "createOneUsers", "deleteManyUsers", "deleteOneUsers", "findFirstUsers", "findFirstUsersOrThrow", "findManyUsers", "findUniqueUsers", "findUniqueUsersOrThrow", "groupByUsers", "updateManyUsers", "updateOneUsers", "upsertOneUsers"],
    Webhooks: ["aggregateWebhooks", "createManyWebhooks", "createOneWebhooks", "deleteManyWebhooks", "deleteOneWebhooks", "findFirstWebhooks", "findFirstWebhooksOrThrow", "findManyWebhooks", "findUniqueWebhooks", "findUniqueWebhooksOrThrow", "groupByWebhooks", "updateManyWebhooks", "updateOneWebhooks", "upsertOneWebhooks"],
    Settings: ["aggregateSettings", "createManySettings", "createOneSettings", "deleteManySettings", "deleteOneSettings", "findFirstSettings", "findFirstSettingsOrThrow", "findManySettings", "findUniqueSettings", "findUniqueSettingsOrThrow", "groupBySettings", "updateManySettings", "updateOneSettings", "upsertOneSettings"],
    LogIn: ["aggregateLogIn", "createManyLogIn", "createOneLogIn", "deleteManyLogIn", "deleteOneLogIn", "findFirstLogIn", "findFirstLogInOrThrow", "logIns", "logIn", "getLogIn", "groupByLogIn", "updateManyLogIn", "updateOneLogIn", "upsertOneLogIn"],
    Dashboardslist: ["aggregateDashboardslist", "createManyDashboardslist", "createOneDashboardslist", "deleteManyDashboardslist", "deleteOneDashboardslist", "findFirstDashboardslist", "findFirstDashboardslistOrThrow", "dashboardslists", "dashboardslist", "getDashboardslist", "groupByDashboardslist", "updateManyDashboardslist", "updateOneDashboardslist", "upsertOneDashboardslist"],
    Dashboardgraphql: ["aggregateDashboardgraphql", "createManyDashboardgraphql", "createOneDashboardgraphql", "deleteManyDashboardgraphql", "deleteOneDashboardgraphql", "findFirstDashboardgraphql", "findFirstDashboardgraphqlOrThrow", "dashboardgraphqls", "dashboardgraphql", "getDashboardgraphql", "groupByDashboardgraphql", "updateManyDashboardgraphql", "updateOneDashboardgraphql", "upsertOneDashboardgraphql"],
    Dashboardrestapi: ["aggregateDashboardrestapi", "createManyDashboardrestapi", "createOneDashboardrestapi", "deleteManyDashboardrestapi", "deleteOneDashboardrestapi", "findFirstDashboardrestapi", "findFirstDashboardrestapiOrThrow", "dashboardrestapis", "dashboardrestapi", "getDashboardrestapi", "groupByDashboardrestapi", "updateManyDashboardrestapi", "updateOneDashboardrestapi", "upsertOneDashboardrestapi"],
    Dashboardslides: ["aggregateDashboardslides", "createManyDashboardslides", "createOneDashboardslides", "deleteManyDashboardslides", "deleteOneDashboardslides", "findFirstDashboardslides", "findFirstDashboardslidesOrThrow", "findManyDashboardslides", "findUniqueDashboardslides", "findUniqueDashboardslidesOrThrow", "groupByDashboardslides", "updateManyDashboardslides", "updateOneDashboardslides", "upsertOneDashboardslides"],
    Dashboardjson: ["aggregateDashboardjson", "createManyDashboardjson", "createOneDashboardjson", "deleteManyDashboardjson", "deleteOneDashboardjson", "findFirstDashboardjson", "findFirstDashboardjsonOrThrow", "dashboardjsons", "dashboardjson", "getDashboardjson", "groupByDashboardjson", "updateManyDashboardjson", "updateOneDashboardjson", "upsertOneDashboardjson"],
    Agreements: ["aggregateAgreements", "createManyAgreements", "createOneAgreements", "deleteManyAgreements", "deleteOneAgreements", "findFirstAgreements", "findFirstAgreementsOrThrow", "findManyAgreements", "findUniqueAgreements", "findUniqueAgreementsOrThrow", "groupByAgreements", "updateManyAgreements", "updateOneAgreements", "upsertOneAgreements"]
};
const argsInfo = {
    AggregateApitokenArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyApitokenArgs: ["data", "skipDuplicates"],
    CreateOneApitokenArgs: ["data"],
    DeleteManyApitokenArgs: ["where"],
    DeleteOneApitokenArgs: ["where"],
    FindFirstApitokenArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstApitokenOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyApitokenArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueApitokenArgs: ["where"],
    FindUniqueApitokenOrThrowArgs: ["where"],
    GroupByApitokenArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyApitokenArgs: ["data", "where"],
    UpdateOneApitokenArgs: ["data", "where"],
    UpsertOneApitokenArgs: ["where", "create", "update"],
    AggregateCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyCategoriesArgs: ["data", "skipDuplicates"],
    CreateOneCategoriesArgs: ["data"],
    DeleteManyCategoriesArgs: ["where"],
    DeleteOneCategoriesArgs: ["where"],
    FindFirstCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstCategoriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueCategoriesArgs: ["where"],
    FindUniqueCategoriesOrThrowArgs: ["where"],
    GroupByCategoriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyCategoriesArgs: ["data", "where"],
    UpdateOneCategoriesArgs: ["data", "where"],
    UpsertOneCategoriesArgs: ["where", "create", "update"],
    AggregateContent_typeArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyContent_typeArgs: ["data", "skipDuplicates"],
    CreateOneContent_typeArgs: ["data"],
    DeleteManyContent_typeArgs: ["where"],
    DeleteOneContent_typeArgs: ["where"],
    FindFirstContent_typeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstContent_typeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyContent_typeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueContent_typeArgs: ["where"],
    FindUniqueContent_typeOrThrowArgs: ["where"],
    GroupByContent_typeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyContent_typeArgs: ["data", "where"],
    UpdateOneContent_typeArgs: ["data", "where"],
    UpsertOneContent_typeArgs: ["where", "create", "update"],
    AggregateCustomersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyCustomersArgs: ["data", "skipDuplicates"],
    CreateOneCustomersArgs: ["data"],
    DeleteManyCustomersArgs: ["where"],
    DeleteOneCustomersArgs: ["where"],
    FindFirstCustomersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstCustomersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCustomersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueCustomersArgs: ["where"],
    FindUniqueCustomersOrThrowArgs: ["where"],
    GroupByCustomersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyCustomersArgs: ["data", "where"],
    UpdateOneCustomersArgs: ["data", "where"],
    UpsertOneCustomersArgs: ["where", "create", "update"],
    AggregateDashboardsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardsArgs: ["data", "skipDuplicates"],
    CreateOneDashboardsArgs: ["data"],
    DeleteManyDashboardsArgs: ["where"],
    DeleteOneDashboardsArgs: ["where"],
    FindFirstDashboardsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardsArgs: ["where"],
    FindUniqueDashboardsOrThrowArgs: ["where"],
    GroupByDashboardsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardsArgs: ["data", "where"],
    UpdateOneDashboardsArgs: ["data", "where"],
    UpsertOneDashboardsArgs: ["where", "create", "update"],
    AggregateIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyIntegrationsArgs: ["data", "skipDuplicates"],
    CreateOneIntegrationsArgs: ["data"],
    DeleteManyIntegrationsArgs: ["where"],
    DeleteOneIntegrationsArgs: ["where"],
    FindFirstIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstIntegrationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueIntegrationsArgs: ["where"],
    FindUniqueIntegrationsOrThrowArgs: ["where"],
    GroupByIntegrationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyIntegrationsArgs: ["data", "where"],
    UpdateOneIntegrationsArgs: ["data", "where"],
    UpsertOneIntegrationsArgs: ["where", "create", "update"],
    AggregateInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyInternalizationArgs: ["data", "skipDuplicates"],
    CreateOneInternalizationArgs: ["data"],
    DeleteManyInternalizationArgs: ["where"],
    DeleteOneInternalizationArgs: ["where"],
    FindFirstInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstInternalizationOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueInternalizationArgs: ["where"],
    FindUniqueInternalizationOrThrowArgs: ["where"],
    GroupByInternalizationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyInternalizationArgs: ["data", "where"],
    UpdateOneInternalizationArgs: ["data", "where"],
    UpsertOneInternalizationArgs: ["where", "create", "update"],
    AggregateMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyMediamanagerArgs: ["data", "skipDuplicates"],
    CreateOneMediamanagerArgs: ["data"],
    DeleteManyMediamanagerArgs: ["where"],
    DeleteOneMediamanagerArgs: ["where"],
    FindFirstMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstMediamanagerOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueMediamanagerArgs: ["where"],
    FindUniqueMediamanagerOrThrowArgs: ["where"],
    GroupByMediamanagerArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyMediamanagerArgs: ["data", "where"],
    UpdateOneMediamanagerArgs: ["data", "where"],
    UpsertOneMediamanagerArgs: ["where", "create", "update"],
    AggregatePagesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPagesArgs: ["data", "skipDuplicates"],
    CreateOnePagesArgs: ["data"],
    DeleteManyPagesArgs: ["where"],
    DeleteOnePagesArgs: ["where"],
    FindFirstPagesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPagesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPagesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePagesArgs: ["where"],
    FindUniquePagesOrThrowArgs: ["where"],
    GroupByPagesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPagesArgs: ["data", "where"],
    UpdateOnePagesArgs: ["data", "where"],
    UpsertOnePagesArgs: ["where", "create", "update"],
    AggregatePermissionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPermissionsArgs: ["data", "skipDuplicates"],
    CreateOnePermissionsArgs: ["data"],
    DeleteManyPermissionsArgs: ["where"],
    DeleteOnePermissionsArgs: ["where"],
    FindFirstPermissionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPermissionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPermissionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePermissionsArgs: ["where"],
    FindUniquePermissionsOrThrowArgs: ["where"],
    GroupByPermissionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPermissionsArgs: ["data", "where"],
    UpdateOnePermissionsArgs: ["data", "where"],
    UpsertOnePermissionsArgs: ["where", "create", "update"],
    AggregatePluginsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPluginsArgs: ["data", "skipDuplicates"],
    CreateOnePluginsArgs: ["data"],
    DeleteManyPluginsArgs: ["where"],
    DeleteOnePluginsArgs: ["where"],
    FindFirstPluginsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPluginsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPluginsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePluginsArgs: ["where"],
    FindUniquePluginsOrThrowArgs: ["where"],
    GroupByPluginsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPluginsArgs: ["data", "where"],
    UpdateOnePluginsArgs: ["data", "where"],
    UpsertOnePluginsArgs: ["where", "create", "update"],
    AggregateProvidersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyProvidersArgs: ["data", "skipDuplicates"],
    CreateOneProvidersArgs: ["data"],
    DeleteManyProvidersArgs: ["where"],
    DeleteOneProvidersArgs: ["where"],
    FindFirstProvidersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstProvidersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyProvidersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueProvidersArgs: ["where"],
    FindUniqueProvidersOrThrowArgs: ["where"],
    GroupByProvidersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyProvidersArgs: ["data", "where"],
    UpdateOneProvidersArgs: ["data", "where"],
    UpsertOneProvidersArgs: ["where", "create", "update"],
    AggregateRolesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyRolesArgs: ["data", "skipDuplicates"],
    CreateOneRolesArgs: ["data"],
    DeleteManyRolesArgs: ["where"],
    DeleteOneRolesArgs: ["where"],
    FindFirstRolesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstRolesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyRolesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueRolesArgs: ["where"],
    FindUniqueRolesOrThrowArgs: ["where"],
    GroupByRolesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyRolesArgs: ["data", "where"],
    UpdateOneRolesArgs: ["data", "where"],
    UpsertOneRolesArgs: ["where", "create", "update"],
    AggregateTagsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyTagsArgs: ["data", "skipDuplicates"],
    CreateOneTagsArgs: ["data"],
    DeleteManyTagsArgs: ["where"],
    DeleteOneTagsArgs: ["where"],
    FindFirstTagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstTagsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyTagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueTagsArgs: ["where"],
    FindUniqueTagsOrThrowArgs: ["where"],
    GroupByTagsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyTagsArgs: ["data", "where"],
    UpdateOneTagsArgs: ["data", "where"],
    UpsertOneTagsArgs: ["where", "create", "update"],
    AggregateThemesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyThemesArgs: ["data", "skipDuplicates"],
    CreateOneThemesArgs: ["data"],
    DeleteManyThemesArgs: ["where"],
    DeleteOneThemesArgs: ["where"],
    FindFirstThemesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstThemesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyThemesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueThemesArgs: ["where"],
    FindUniqueThemesOrThrowArgs: ["where"],
    GroupByThemesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyThemesArgs: ["data", "where"],
    UpdateOneThemesArgs: ["data", "where"],
    UpsertOneThemesArgs: ["where", "create", "update"],
    AggregateUpload_fileArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyUpload_fileArgs: ["data", "skipDuplicates"],
    CreateOneUpload_fileArgs: ["data"],
    DeleteManyUpload_fileArgs: ["where"],
    DeleteOneUpload_fileArgs: ["where"],
    FindFirstUpload_fileArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstUpload_fileOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyUpload_fileArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueUpload_fileArgs: ["where"],
    FindUniqueUpload_fileOrThrowArgs: ["where"],
    GroupByUpload_fileArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyUpload_fileArgs: ["data", "where"],
    UpdateOneUpload_fileArgs: ["data", "where"],
    UpsertOneUpload_fileArgs: ["where", "create", "update"],
    AggregateUsersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyUsersArgs: ["data", "skipDuplicates"],
    CreateOneUsersArgs: ["data"],
    DeleteManyUsersArgs: ["where"],
    DeleteOneUsersArgs: ["where"],
    FindFirstUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstUsersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueUsersArgs: ["where"],
    FindUniqueUsersOrThrowArgs: ["where"],
    GroupByUsersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyUsersArgs: ["data", "where"],
    UpdateOneUsersArgs: ["data", "where"],
    UpsertOneUsersArgs: ["where", "create", "update"],
    AggregateWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyWebhooksArgs: ["data", "skipDuplicates"],
    CreateOneWebhooksArgs: ["data"],
    DeleteManyWebhooksArgs: ["where"],
    DeleteOneWebhooksArgs: ["where"],
    FindFirstWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstWebhooksOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueWebhooksArgs: ["where"],
    FindUniqueWebhooksOrThrowArgs: ["where"],
    GroupByWebhooksArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyWebhooksArgs: ["data", "where"],
    UpdateOneWebhooksArgs: ["data", "where"],
    UpsertOneWebhooksArgs: ["where", "create", "update"],
    AggregateSettingsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManySettingsArgs: ["data", "skipDuplicates"],
    CreateOneSettingsArgs: ["data"],
    DeleteManySettingsArgs: ["where"],
    DeleteOneSettingsArgs: ["where"],
    FindFirstSettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstSettingsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManySettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueSettingsArgs: ["where"],
    FindUniqueSettingsOrThrowArgs: ["where"],
    GroupBySettingsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManySettingsArgs: ["data", "where"],
    UpdateOneSettingsArgs: ["data", "where"],
    UpsertOneSettingsArgs: ["where", "create", "update"],
    AggregateLogInArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyLogInArgs: ["data", "skipDuplicates"],
    CreateOneLogInArgs: ["data"],
    DeleteManyLogInArgs: ["where"],
    DeleteOneLogInArgs: ["where"],
    FindFirstLogInArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstLogInOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyLogInArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueLogInArgs: ["where"],
    FindUniqueLogInOrThrowArgs: ["where"],
    GroupByLogInArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyLogInArgs: ["data", "where"],
    UpdateOneLogInArgs: ["data", "where"],
    UpsertOneLogInArgs: ["where", "create", "update"],
    AggregateDashboardslistArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardslistArgs: ["data", "skipDuplicates"],
    CreateOneDashboardslistArgs: ["data"],
    DeleteManyDashboardslistArgs: ["where"],
    DeleteOneDashboardslistArgs: ["where"],
    FindFirstDashboardslistArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardslistOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardslistArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardslistArgs: ["where"],
    FindUniqueDashboardslistOrThrowArgs: ["where"],
    GroupByDashboardslistArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardslistArgs: ["data", "where"],
    UpdateOneDashboardslistArgs: ["data", "where"],
    UpsertOneDashboardslistArgs: ["where", "create", "update"],
    AggregateDashboardgraphqlArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardgraphqlArgs: ["data", "skipDuplicates"],
    CreateOneDashboardgraphqlArgs: ["data"],
    DeleteManyDashboardgraphqlArgs: ["where"],
    DeleteOneDashboardgraphqlArgs: ["where"],
    FindFirstDashboardgraphqlArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardgraphqlOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardgraphqlArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardgraphqlArgs: ["where"],
    FindUniqueDashboardgraphqlOrThrowArgs: ["where"],
    GroupByDashboardgraphqlArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardgraphqlArgs: ["data", "where"],
    UpdateOneDashboardgraphqlArgs: ["data", "where"],
    UpsertOneDashboardgraphqlArgs: ["where", "create", "update"],
    AggregateDashboardrestapiArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardrestapiArgs: ["data", "skipDuplicates"],
    CreateOneDashboardrestapiArgs: ["data"],
    DeleteManyDashboardrestapiArgs: ["where"],
    DeleteOneDashboardrestapiArgs: ["where"],
    FindFirstDashboardrestapiArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardrestapiOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardrestapiArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardrestapiArgs: ["where"],
    FindUniqueDashboardrestapiOrThrowArgs: ["where"],
    GroupByDashboardrestapiArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardrestapiArgs: ["data", "where"],
    UpdateOneDashboardrestapiArgs: ["data", "where"],
    UpsertOneDashboardrestapiArgs: ["where", "create", "update"],
    AggregateDashboardslidesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardslidesArgs: ["data", "skipDuplicates"],
    CreateOneDashboardslidesArgs: ["data"],
    DeleteManyDashboardslidesArgs: ["where"],
    DeleteOneDashboardslidesArgs: ["where"],
    FindFirstDashboardslidesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardslidesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardslidesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardslidesArgs: ["where"],
    FindUniqueDashboardslidesOrThrowArgs: ["where"],
    GroupByDashboardslidesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardslidesArgs: ["data", "where"],
    UpdateOneDashboardslidesArgs: ["data", "where"],
    UpsertOneDashboardslidesArgs: ["where", "create", "update"],
    AggregateDashboardjsonArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyDashboardjsonArgs: ["data", "skipDuplicates"],
    CreateOneDashboardjsonArgs: ["data"],
    DeleteManyDashboardjsonArgs: ["where"],
    DeleteOneDashboardjsonArgs: ["where"],
    FindFirstDashboardjsonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstDashboardjsonOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyDashboardjsonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueDashboardjsonArgs: ["where"],
    FindUniqueDashboardjsonOrThrowArgs: ["where"],
    GroupByDashboardjsonArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyDashboardjsonArgs: ["data", "where"],
    UpdateOneDashboardjsonArgs: ["data", "where"],
    UpsertOneDashboardjsonArgs: ["where", "create", "update"],
    AggregateAgreementsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyAgreementsArgs: ["data", "skipDuplicates"],
    CreateOneAgreementsArgs: ["data"],
    DeleteManyAgreementsArgs: ["where"],
    DeleteOneAgreementsArgs: ["where"],
    FindFirstAgreementsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstAgreementsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyAgreementsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueAgreementsArgs: ["where"],
    FindUniqueAgreementsOrThrowArgs: ["where"],
    GroupByAgreementsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyAgreementsArgs: ["data", "where"],
    UpdateOneAgreementsArgs: ["data", "where"],
    UpsertOneAgreementsArgs: ["where", "create", "update"]
};
function applyResolversEnhanceMap(resolversEnhanceMap) {
    for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
        const modelName = resolversEnhanceMapKey;
        const crudTarget = crudResolversMap[modelName].prototype;
        const resolverActionsConfig = resolversEnhanceMap[modelName];
        const actionResolversConfig = actionResolversMap[modelName];
        if (resolverActionsConfig._all) {
            const allActionsDecorators = resolverActionsConfig._all;
            const resolverActionNames = crudResolversInfo[modelName];
            for (const resolverActionName of resolverActionNames) {
                const actionTarget = actionResolversConfig[resolverActionName].prototype;
                tslib.__decorate(allActionsDecorators, crudTarget, resolverActionName, null);
                tslib.__decorate(allActionsDecorators, actionTarget, resolverActionName, null);
            }
        }
        const resolverActionsToApply = Object.keys(resolverActionsConfig).filter(it => it !== "_all");
        for (const resolverActionName of resolverActionsToApply) {
            const decorators = resolverActionsConfig[resolverActionName];
            const actionTarget = actionResolversConfig[resolverActionName].prototype;
            tslib.__decorate(decorators, crudTarget, resolverActionName, null);
            tslib.__decorate(decorators, actionTarget, resolverActionName, null);
        }
    }
}
exports.applyResolversEnhanceMap = applyResolversEnhanceMap;
function applyArgsTypesEnhanceMap(argsTypesEnhanceMap) {
    for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
        const argsTypeName = argsTypesEnhanceMapKey;
        const typeConfig = argsTypesEnhanceMap[argsTypeName];
        const typeClass = argsTypes[argsTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, argsInfo[argsTypeName]);
    }
}
exports.applyArgsTypesEnhanceMap = applyArgsTypesEnhanceMap;
function applyTypeClassEnhanceConfig(enhanceConfig, typeClass, typePrototype, typeFieldNames) {
    if (enhanceConfig.class) {
        tslib.__decorate(enhanceConfig.class, typeClass);
    }
    if (enhanceConfig.fields) {
        if (enhanceConfig.fields._all) {
            const allFieldsDecorators = enhanceConfig.fields._all;
            for (const typeFieldName of typeFieldNames) {
                tslib.__decorate(allFieldsDecorators, typePrototype, typeFieldName, void 0);
            }
        }
        const configFieldsToApply = Object.keys(enhanceConfig.fields).filter(it => it !== "_all");
        for (const typeFieldName of configFieldsToApply) {
            const fieldDecorators = enhanceConfig.fields[typeFieldName];
            tslib.__decorate(fieldDecorators, typePrototype, typeFieldName, void 0);
        }
    }
}
const modelsInfo = {
    Apitoken: ["id", "created_at", "name", "token_type", "description", "token"],
    Categories: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    Content_type: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Customers: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    Dashboards: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    Integrations: ["id", "created_at", "name", "content", "media", "location", "category"],
    Internalization: ["id", "created_at", "name", "region", "description", "default", "website"],
    Mediamanager: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    Pages: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    Permissions: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    Plugins: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    Providers: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    Roles: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    Tags: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    Themes: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    Upload_file: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Users: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    Webhooks: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    Settings: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    LogIn: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    Dashboardslist: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    Dashboardgraphql: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    Dashboardrestapi: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    Dashboardslides: ["id", "name", "categories", "media", "description"],
    Dashboardjson: ["id", "name", "url", "description", "definition", "format"],
    Agreements: ["id", "created_at", "name", "type", "author", "updated_at"]
};
function applyModelsEnhanceMap(modelsEnhanceMap) {
    for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
        const modelName = modelsEnhanceMapKey;
        const modelConfig = modelsEnhanceMap[modelName];
        const modelClass = models[modelName];
        const modelTarget = modelClass.prototype;
        applyTypeClassEnhanceConfig(modelConfig, modelClass, modelTarget, modelsInfo[modelName]);
    }
}
exports.applyModelsEnhanceMap = applyModelsEnhanceMap;
const outputsInfo = {
    AggregateApitoken: ["_count", "_avg", "_sum", "_min", "_max"],
    ApitokenGroupBy: ["id", "created_at", "name", "token_type", "description", "token", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateCategories: ["_count", "_avg", "_sum", "_min", "_max"],
    CategoriesGroupBy: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateContent_type: ["_count", "_avg", "_sum", "_min", "_max"],
    Content_typeGroupBy: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateCustomers: ["_count", "_avg", "_sum", "_min", "_max"],
    CustomersGroupBy: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboards: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardsGroupBy: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateIntegrations: ["_count", "_avg", "_sum", "_min", "_max"],
    IntegrationsGroupBy: ["id", "created_at", "name", "content", "media", "location", "category", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateInternalization: ["_count", "_avg", "_sum", "_min", "_max"],
    InternalizationGroupBy: ["id", "created_at", "name", "region", "description", "default", "website", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateMediamanager: ["_count", "_avg", "_sum", "_min", "_max"],
    MediamanagerGroupBy: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePages: ["_count", "_avg", "_sum", "_min", "_max"],
    PagesGroupBy: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePermissions: ["_count", "_avg", "_sum", "_min", "_max"],
    PermissionsGroupBy: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePlugins: ["_count", "_avg", "_sum", "_min", "_max"],
    PluginsGroupBy: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateProviders: ["_count", "_avg", "_sum", "_min", "_max"],
    ProvidersGroupBy: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateRoles: ["_count", "_avg", "_sum", "_min", "_max"],
    RolesGroupBy: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateTags: ["_count", "_avg", "_sum", "_min", "_max"],
    TagsGroupBy: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateThemes: ["_count", "_avg", "_sum", "_min", "_max"],
    ThemesGroupBy: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateUpload_file: ["_count", "_avg", "_sum", "_min", "_max"],
    Upload_fileGroupBy: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateUsers: ["_count", "_avg", "_sum", "_min", "_max"],
    UsersGroupBy: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateWebhooks: ["_count", "_avg", "_sum", "_min", "_max"],
    WebhooksGroupBy: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateSettings: ["_count", "_avg", "_sum", "_min", "_max"],
    SettingsGroupBy: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateLogIn: ["_count", "_avg", "_sum", "_min", "_max"],
    LogInGroupBy: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboardslist: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardslistGroupBy: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboardgraphql: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardgraphqlGroupBy: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboardrestapi: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardrestapiGroupBy: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboardslides: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardslidesGroupBy: ["id", "name", "categories", "media", "description", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateDashboardjson: ["_count", "_avg", "_sum", "_min", "_max"],
    DashboardjsonGroupBy: ["id", "name", "url", "description", "definition", "format", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateAgreements: ["_count", "_avg", "_sum", "_min", "_max"],
    AgreementsGroupBy: ["id", "created_at", "name", "type", "author", "updated_at", "_count", "_avg", "_sum", "_min", "_max"],
    AffectedRowsOutput: ["count"],
    ApitokenCountAggregate: ["id", "created_at", "name", "token_type", "description", "token", "_all"],
    ApitokenAvgAggregate: ["id", "token"],
    ApitokenSumAggregate: ["id", "token"],
    ApitokenMinAggregate: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenMaxAggregate: ["id", "created_at", "name", "token_type", "description", "token"],
    CategoriesCountAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_all"],
    CategoriesAvgAggregate: ["id"],
    CategoriesSumAggregate: ["id"],
    CategoriesMinAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesMaxAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    Content_typeCountAggregate: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name", "_all"],
    Content_typeAvgAggregate: ["id", "number"],
    Content_typeSumAggregate: ["id", "number"],
    Content_typeMinAggregate: ["id", "created_at", "text", "number", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeMaxAggregate: ["id", "created_at", "text", "number", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    CustomersCountAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_all"],
    CustomersAvgAggregate: ["id"],
    CustomersSumAggregate: ["id"],
    CustomersMinAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersMaxAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    DashboardsCountAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_all"],
    DashboardsAvgAggregate: ["id"],
    DashboardsSumAggregate: ["id"],
    DashboardsMinAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsMaxAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    IntegrationsCountAggregate: ["id", "created_at", "name", "content", "media", "location", "category", "_all"],
    IntegrationsAvgAggregate: ["id"],
    IntegrationsSumAggregate: ["id"],
    IntegrationsMinAggregate: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsMaxAggregate: ["id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationCountAggregate: ["id", "created_at", "name", "region", "description", "default", "website", "_all"],
    InternalizationAvgAggregate: ["id"],
    InternalizationSumAggregate: ["id"],
    InternalizationMinAggregate: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationMaxAggregate: ["id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerCountAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_all"],
    MediamanagerAvgAggregate: ["id"],
    MediamanagerSumAggregate: ["id"],
    MediamanagerMinAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerMaxAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PagesCountAggregate: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at", "_all"],
    PagesAvgAggregate: ["id"],
    PagesSumAggregate: ["id"],
    PagesMinAggregate: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesMaxAggregate: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PermissionsCountAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_all"],
    PermissionsAvgAggregate: ["id"],
    PermissionsSumAggregate: ["id"],
    PermissionsMinAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsMaxAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsCountAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_all"],
    PluginsAvgAggregate: ["id"],
    PluginsSumAggregate: ["id"],
    PluginsMinAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsMaxAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersCountAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_all"],
    ProvidersAvgAggregate: ["id"],
    ProvidersSumAggregate: ["id"],
    ProvidersMinAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersMaxAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesCountAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_all"],
    RolesAvgAggregate: ["id"],
    RolesSumAggregate: ["id"],
    RolesMinAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesMaxAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsCountAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_all"],
    TagsAvgAggregate: ["id"],
    TagsSumAggregate: ["id"],
    TagsMinAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsMaxAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    ThemesCountAggregate: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites", "_all"],
    ThemesAvgAggregate: ["id", "website_id"],
    ThemesSumAggregate: ["id", "website_id"],
    ThemesMinAggregate: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesMaxAggregate: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    Upload_fileCountAggregate: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at", "_all"],
    Upload_fileAvgAggregate: ["id", "width", "height", "size", "created_by", "updated_by"],
    Upload_fileSumAggregate: ["id", "width", "height", "size", "created_by", "updated_by"],
    Upload_fileMinAggregate: ["id", "name", "alternativeText", "caption", "width", "height", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileMaxAggregate: ["id", "name", "alternativeText", "caption", "width", "height", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "created_by", "updated_by", "created_at", "updated_at"],
    UsersCountAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_all"],
    UsersAvgAggregate: ["id"],
    UsersSumAggregate: ["id"],
    UsersMinAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersMaxAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksCountAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_all"],
    WebhooksAvgAggregate: ["id"],
    WebhooksSumAggregate: ["id"],
    WebhooksMinAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksMaxAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsCountAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_all"],
    SettingsAvgAggregate: ["id"],
    SettingsSumAggregate: ["id"],
    SettingsMinAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsMaxAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    LogInCountAggregate: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username", "_all"],
    LogInAvgAggregate: ["id"],
    LogInSumAggregate: ["id"],
    LogInMinAggregate: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInMaxAggregate: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    DashboardslistCountAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_all"],
    DashboardslistAvgAggregate: ["id"],
    DashboardslistSumAggregate: ["id"],
    DashboardslistMinAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistMaxAggregate: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardgraphqlCountAggregate: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description", "_all"],
    DashboardgraphqlAvgAggregate: ["id"],
    DashboardgraphqlSumAggregate: ["id"],
    DashboardgraphqlMinAggregate: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlMaxAggregate: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardrestapiCountAggregate: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description", "_all"],
    DashboardrestapiAvgAggregate: ["id"],
    DashboardrestapiSumAggregate: ["id"],
    DashboardrestapiMinAggregate: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiMaxAggregate: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardslidesCountAggregate: ["id", "name", "categories", "media", "description", "_all"],
    DashboardslidesAvgAggregate: ["id"],
    DashboardslidesSumAggregate: ["id"],
    DashboardslidesMinAggregate: ["id", "name", "categories", "media", "description"],
    DashboardslidesMaxAggregate: ["id", "name", "categories", "media", "description"],
    DashboardjsonCountAggregate: ["id", "name", "url", "description", "definition", "format", "_all"],
    DashboardjsonAvgAggregate: ["id"],
    DashboardjsonSumAggregate: ["id"],
    DashboardjsonMinAggregate: ["id", "name", "url", "description", "definition", "format"],
    DashboardjsonMaxAggregate: ["id", "name", "url", "description", "definition", "format"],
    AgreementsCountAggregate: ["id", "created_at", "name", "type", "author", "updated_at", "_all"],
    AgreementsAvgAggregate: ["id"],
    AgreementsSumAggregate: ["id"],
    AgreementsMinAggregate: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsMaxAggregate: ["id", "created_at", "name", "type", "author", "updated_at"]
};
function applyOutputTypesEnhanceMap(outputTypesEnhanceMap) {
    for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
        const outputTypeName = outputTypeEnhanceMapKey;
        const typeConfig = outputTypesEnhanceMap[outputTypeName];
        const typeClass = outputTypes[outputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, outputsInfo[outputTypeName]);
    }
}
exports.applyOutputTypesEnhanceMap = applyOutputTypesEnhanceMap;
const inputsInfo = {
    ApitokenWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "token_type", "description", "token"],
    ApitokenOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "token_type", "description", "token", "_relevance"],
    ApitokenWhereUniqueInput: ["id", "name", "token"],
    ApitokenOrderByWithAggregationInput: ["id", "created_at", "name", "token_type", "description", "token", "_count", "_avg", "_max", "_min", "_sum"],
    ApitokenScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "token_type", "description", "token"],
    CategoriesWhereInput: ["AND", "OR", "NOT", "id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesOrderByWithRelationAndSearchRelevanceInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_relevance"],
    CategoriesWhereUniqueInput: ["id"],
    CategoriesOrderByWithAggregationInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_count", "_avg", "_max", "_min", "_sum"],
    CategoriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    Content_typeWhereInput: ["AND", "OR", "NOT", "id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name", "_relevance"],
    Content_typeWhereUniqueInput: ["id"],
    Content_typeOrderByWithAggregationInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name", "_count", "_avg", "_max", "_min", "_sum"],
    Content_typeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    CustomersWhereInput: ["AND", "OR", "NOT", "id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersOrderByWithRelationAndSearchRelevanceInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_relevance"],
    CustomersWhereUniqueInput: ["id"],
    CustomersOrderByWithAggregationInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_count", "_avg", "_max", "_min", "_sum"],
    CustomersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    DashboardsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_relevance"],
    DashboardsWhereUniqueInput: ["id", "name"],
    DashboardsOrderByWithAggregationInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    IntegrationsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "content", "media", "location", "category", "_relevance"],
    IntegrationsWhereUniqueInput: ["id"],
    IntegrationsOrderByWithAggregationInput: ["id", "created_at", "name", "content", "media", "location", "category", "_count", "_avg", "_max", "_min", "_sum"],
    IntegrationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "region", "description", "default", "website", "_relevance"],
    InternalizationWhereUniqueInput: ["id"],
    InternalizationOrderByWithAggregationInput: ["id", "created_at", "name", "region", "description", "default", "website", "_count", "_avg", "_max", "_min", "_sum"],
    InternalizationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_relevance"],
    MediamanagerWhereUniqueInput: ["id"],
    MediamanagerOrderByWithAggregationInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_count", "_avg", "_max", "_min", "_sum"],
    MediamanagerScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PagesWhereInput: ["AND", "OR", "NOT", "id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesOrderByWithRelationAndSearchRelevanceInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at", "_relevance"],
    PagesWhereUniqueInput: ["id"],
    PagesOrderByWithAggregationInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at", "_count", "_avg", "_max", "_min", "_sum"],
    PagesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PermissionsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_relevance"],
    PermissionsWhereUniqueInput: ["id"],
    PermissionsOrderByWithAggregationInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_count", "_avg", "_max", "_min", "_sum"],
    PermissionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_relevance"],
    PluginsWhereUniqueInput: ["id"],
    PluginsOrderByWithAggregationInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_count", "_avg", "_max", "_min", "_sum"],
    PluginsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersWhereInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_relevance"],
    ProvidersWhereUniqueInput: ["id", "name"],
    ProvidersOrderByWithAggregationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_count", "_avg", "_max", "_min", "_sum"],
    ProvidersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesWhereInput: ["AND", "OR", "NOT", "id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesOrderByWithRelationAndSearchRelevanceInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_relevance"],
    RolesWhereUniqueInput: ["id"],
    RolesOrderByWithAggregationInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_count", "_avg", "_max", "_min", "_sum"],
    RolesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsWhereInput: ["AND", "OR", "NOT", "id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_relevance"],
    TagsWhereUniqueInput: ["id"],
    TagsOrderByWithAggregationInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_count", "_avg", "_max", "_min", "_sum"],
    TagsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    ThemesWhereInput: ["AND", "OR", "NOT", "id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesOrderByWithRelationAndSearchRelevanceInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites", "_relevance"],
    ThemesWhereUniqueInput: ["id"],
    ThemesOrderByWithAggregationInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites", "_count", "_avg", "_max", "_min", "_sum"],
    ThemesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    Upload_fileWhereInput: ["AND", "OR", "NOT", "id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at", "_relevance"],
    Upload_fileWhereUniqueInput: ["id"],
    Upload_fileOrderByWithAggregationInput: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at", "_count", "_avg", "_max", "_min", "_sum"],
    Upload_fileScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    UsersWhereInput: ["AND", "OR", "NOT", "id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersOrderByWithRelationAndSearchRelevanceInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_relevance"],
    UsersWhereUniqueInput: ["id"],
    UsersOrderByWithAggregationInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_count", "_avg", "_max", "_min", "_sum"],
    UsersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_relevance"],
    WebhooksWhereUniqueInput: ["id"],
    WebhooksOrderByWithAggregationInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_count", "_avg", "_max", "_min", "_sum"],
    WebhooksScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_relevance"],
    SettingsWhereUniqueInput: ["id"],
    SettingsOrderByWithAggregationInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_count", "_avg", "_max", "_min", "_sum"],
    SettingsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    LogInWhereInput: ["AND", "OR", "NOT", "id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username", "_relevance"],
    LogInWhereUniqueInput: ["id"],
    LogInOrderByWithAggregationInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username", "_count", "_avg", "_max", "_min", "_sum"],
    LogInScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    DashboardslistWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_relevance"],
    DashboardslistWhereUniqueInput: ["id", "name"],
    DashboardslistOrderByWithAggregationInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardslistScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardgraphqlWhereInput: ["AND", "OR", "NOT", "id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description", "_relevance"],
    DashboardgraphqlWhereUniqueInput: ["id"],
    DashboardgraphqlOrderByWithAggregationInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardgraphqlScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardrestapiWhereInput: ["AND", "OR", "NOT", "id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description", "_relevance"],
    DashboardrestapiWhereUniqueInput: ["id"],
    DashboardrestapiOrderByWithAggregationInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardrestapiScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardslidesWhereInput: ["AND", "OR", "NOT", "id", "name", "categories", "media", "description"],
    DashboardslidesOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "categories", "media", "description", "_relevance"],
    DashboardslidesWhereUniqueInput: ["id"],
    DashboardslidesOrderByWithAggregationInput: ["id", "name", "categories", "media", "description", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardslidesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "categories", "media", "description"],
    DashboardjsonWhereInput: ["AND", "OR", "NOT", "id", "name", "url", "description", "definition", "format"],
    DashboardjsonOrderByWithRelationAndSearchRelevanceInput: ["id", "name", "url", "description", "definition", "format", "_relevance"],
    DashboardjsonWhereUniqueInput: ["id"],
    DashboardjsonOrderByWithAggregationInput: ["id", "name", "url", "description", "definition", "format", "_count", "_avg", "_max", "_min", "_sum"],
    DashboardjsonScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "url", "description", "definition", "format"],
    AgreementsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsOrderByWithRelationAndSearchRelevanceInput: ["id", "created_at", "name", "type", "author", "updated_at", "_relevance"],
    AgreementsWhereUniqueInput: ["id"],
    AgreementsOrderByWithAggregationInput: ["id", "created_at", "name", "type", "author", "updated_at", "_count", "_avg", "_max", "_min", "_sum"],
    AgreementsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "type", "author", "updated_at"],
    ApitokenCreateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenUpdateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenCreateManyInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenUpdateManyMutationInput: ["id", "created_at", "name", "token_type", "description", "token"],
    CategoriesCreateInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesUpdateInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesCreateManyInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesUpdateManyMutationInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    Content_typeCreateInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeUpdateInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeCreateManyInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeUpdateManyMutationInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    CustomersCreateInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersUpdateInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersCreateManyInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersUpdateManyMutationInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    DashboardsCreateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsUpdateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsCreateManyInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsUpdateManyMutationInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    IntegrationsCreateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsUpdateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsCreateManyInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsUpdateManyMutationInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationCreateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationUpdateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationCreateManyInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationUpdateManyMutationInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerCreateInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerUpdateInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerCreateManyInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerUpdateManyMutationInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PagesCreateInput: ["enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesUpdateInput: ["enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesCreateManyInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesUpdateManyMutationInput: ["enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PermissionsCreateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsUpdateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsCreateManyInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsUpdateManyMutationInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsCreateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsUpdateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsCreateManyInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsUpdateManyMutationInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersCreateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersUpdateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersCreateManyInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersUpdateManyMutationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesCreateInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesUpdateInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesCreateManyInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesUpdateManyMutationInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsCreateInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsUpdateInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsCreateManyInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsUpdateManyMutationInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    ThemesCreateInput: ["title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesUpdateInput: ["title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesCreateManyInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesUpdateManyMutationInput: ["title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    Upload_fileCreateInput: ["name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileUpdateInput: ["name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileCreateManyInput: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileUpdateManyMutationInput: ["name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    UsersCreateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersUpdateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersCreateManyInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersUpdateManyMutationInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksCreateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksUpdateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksCreateManyInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksUpdateManyMutationInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsCreateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsUpdateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsCreateManyInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsUpdateManyMutationInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    LogInCreateInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInUpdateInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInCreateManyInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInUpdateManyMutationInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    DashboardslistCreateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistUpdateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistCreateManyInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistUpdateManyMutationInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardgraphqlCreateInput: ["name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlUpdateInput: ["name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlCreateManyInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlUpdateManyMutationInput: ["name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardrestapiCreateInput: ["name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiUpdateInput: ["name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiCreateManyInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiUpdateManyMutationInput: ["name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardslidesCreateInput: ["name", "categories", "media", "description"],
    DashboardslidesUpdateInput: ["name", "categories", "media", "description"],
    DashboardslidesCreateManyInput: ["id", "name", "categories", "media", "description"],
    DashboardslidesUpdateManyMutationInput: ["name", "categories", "media", "description"],
    DashboardjsonCreateInput: ["name", "url", "description", "definition", "format"],
    DashboardjsonUpdateInput: ["name", "url", "description", "definition", "format"],
    DashboardjsonCreateManyInput: ["id", "name", "url", "description", "definition", "format"],
    DashboardjsonUpdateManyMutationInput: ["name", "url", "description", "definition", "format"],
    AgreementsCreateInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsUpdateInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsCreateManyInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsUpdateManyMutationInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    BigIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "mode", "not"],
    StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "mode", "not"],
    ApitokenOrderByRelevanceInput: ["fields", "sort", "search"],
    ApitokenCountOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenAvgOrderByAggregateInput: ["id", "token"],
    ApitokenMaxOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenMinOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenSumOrderByAggregateInput: ["id", "token"],
    BigIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "mode", "not", "_count", "_min", "_max"],
    StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "mode", "not", "_count", "_min", "_max"],
    IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    BoolNullableFilter: ["equals", "not"],
    CategoriesOrderByRelevanceInput: ["fields", "sort", "search"],
    CategoriesCountOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesAvgOrderByAggregateInput: ["id"],
    CategoriesMaxOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesMinOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesSumOrderByAggregateInput: ["id"],
    IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    BoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    DecimalNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    JsonNullableFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not"],
    Content_typeOrderByRelevanceInput: ["fields", "sort", "search"],
    Content_typeCountOrderByAggregateInput: ["id", "created_at", "text", "number", "json", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeAvgOrderByAggregateInput: ["id", "number"],
    Content_typeMaxOrderByAggregateInput: ["id", "created_at", "text", "number", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeMinOrderByAggregateInput: ["id", "created_at", "text", "number", "link", "email", "uid", "date", "time", "timestamp", "boolean", "rich_text", "password", "media", "database_name"],
    Content_typeSumOrderByAggregateInput: ["id", "number"],
    DecimalNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    JsonNullableWithAggregatesFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    CustomersOrderByRelevanceInput: ["fields", "sort", "search"],
    CustomersCountOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersAvgOrderByAggregateInput: ["id"],
    CustomersMaxOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersMinOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersSumOrderByAggregateInput: ["id"],
    DashboardsOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardsCountOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsAvgOrderByAggregateInput: ["id"],
    DashboardsMaxOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsMinOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardsSumOrderByAggregateInput: ["id"],
    IntegrationsOrderByRelevanceInput: ["fields", "sort", "search"],
    IntegrationsCountOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsAvgOrderByAggregateInput: ["id"],
    IntegrationsMaxOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsMinOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsSumOrderByAggregateInput: ["id"],
    InternalizationOrderByRelevanceInput: ["fields", "sort", "search"],
    InternalizationCountOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationAvgOrderByAggregateInput: ["id"],
    InternalizationMaxOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationMinOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationSumOrderByAggregateInput: ["id"],
    MediamanagerOrderByRelevanceInput: ["fields", "sort", "search"],
    MediamanagerCountOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerAvgOrderByAggregateInput: ["id"],
    MediamanagerMaxOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerMinOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerSumOrderByAggregateInput: ["id"],
    PagesOrderByRelevanceInput: ["fields", "sort", "search"],
    PagesCountOrderByAggregateInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesAvgOrderByAggregateInput: ["id"],
    PagesMaxOrderByAggregateInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesMinOrderByAggregateInput: ["id", "enable_page", "title", "content_title", "content", "url_key", "meta_title", "meta_keywords", "meta_description", "created_at"],
    PagesSumOrderByAggregateInput: ["id"],
    PermissionsOrderByRelevanceInput: ["fields", "sort", "search"],
    PermissionsCountOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsAvgOrderByAggregateInput: ["id"],
    PermissionsMaxOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsMinOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsSumOrderByAggregateInput: ["id"],
    PluginsOrderByRelevanceInput: ["fields", "sort", "search"],
    PluginsCountOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsAvgOrderByAggregateInput: ["id"],
    PluginsMaxOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsMinOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsSumOrderByAggregateInput: ["id"],
    ProvidersOrderByRelevanceInput: ["fields", "sort", "search"],
    ProvidersCountOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersAvgOrderByAggregateInput: ["id"],
    ProvidersMaxOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersMinOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersSumOrderByAggregateInput: ["id"],
    RolesOrderByRelevanceInput: ["fields", "sort", "search"],
    RolesCountOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesAvgOrderByAggregateInput: ["id"],
    RolesMaxOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesMinOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesSumOrderByAggregateInput: ["id"],
    TagsOrderByRelevanceInput: ["fields", "sort", "search"],
    TagsCountOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsAvgOrderByAggregateInput: ["id"],
    TagsMaxOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsMinOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsSumOrderByAggregateInput: ["id"],
    ThemesOrderByRelevanceInput: ["fields", "sort", "search"],
    ThemesCountOrderByAggregateInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesAvgOrderByAggregateInput: ["id", "website_id"],
    ThemesMaxOrderByAggregateInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesMinOrderByAggregateInput: ["id", "title", "parent_theme", "theme_path", "action", "website_id", "websites"],
    ThemesSumOrderByAggregateInput: ["id", "website_id"],
    IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    DecimalFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    Upload_fileOrderByRelevanceInput: ["fields", "sort", "search"],
    Upload_fileCountOrderByAggregateInput: ["id", "name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileAvgOrderByAggregateInput: ["id", "width", "height", "size", "created_by", "updated_by"],
    Upload_fileMaxOrderByAggregateInput: ["id", "name", "alternativeText", "caption", "width", "height", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileMinOrderByAggregateInput: ["id", "name", "alternativeText", "caption", "width", "height", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "created_by", "updated_by", "created_at", "updated_at"],
    Upload_fileSumOrderByAggregateInput: ["id", "width", "height", "size", "created_by", "updated_by"],
    IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    DecimalWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    UsersOrderByRelevanceInput: ["fields", "sort", "search"],
    UsersCountOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersAvgOrderByAggregateInput: ["id"],
    UsersMaxOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersMinOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersSumOrderByAggregateInput: ["id"],
    WebhooksOrderByRelevanceInput: ["fields", "sort", "search"],
    WebhooksCountOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksAvgOrderByAggregateInput: ["id"],
    WebhooksMaxOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksMinOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksSumOrderByAggregateInput: ["id"],
    SettingsOrderByRelevanceInput: ["fields", "sort", "search"],
    SettingsCountOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsAvgOrderByAggregateInput: ["id"],
    SettingsMaxOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsMinOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsSumOrderByAggregateInput: ["id"],
    LogInOrderByRelevanceInput: ["fields", "sort", "search"],
    LogInCountOrderByAggregateInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInAvgOrderByAggregateInput: ["id"],
    LogInMaxOrderByAggregateInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInMinOrderByAggregateInput: ["id", "created_at", "email", "password", "token", "expiresIn", "users", "username"],
    LogInSumOrderByAggregateInput: ["id"],
    DashboardslistOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardslistCountOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistAvgOrderByAggregateInput: ["id"],
    DashboardslistMaxOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistMinOrderByAggregateInput: ["id", "created_at", "name", "client_id", "client_secret", "privacy", "category", "url", "media", "reports", "tasks", "projects", "tickets", "customers", "checklists", "visits", "users", "products", "articles", "sales", "logo", "content", "published"],
    DashboardslistSumOrderByAggregateInput: ["id"],
    DashboardgraphqlOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardgraphqlCountOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlAvgOrderByAggregateInput: ["id"],
    DashboardgraphqlMaxOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlMinOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "urlValue", "urlKey", "description"],
    DashboardgraphqlSumOrderByAggregateInput: ["id"],
    DashboardrestapiOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardrestapiCountOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiAvgOrderByAggregateInput: ["id"],
    DashboardrestapiMaxOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiMinOrderByAggregateInput: ["id", "name", "url", "headerValue", "headerKey", "authenticationType", "description"],
    DashboardrestapiSumOrderByAggregateInput: ["id"],
    DashboardslidesOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardslidesCountOrderByAggregateInput: ["id", "name", "categories", "media", "description"],
    DashboardslidesAvgOrderByAggregateInput: ["id"],
    DashboardslidesMaxOrderByAggregateInput: ["id", "name", "categories", "media", "description"],
    DashboardslidesMinOrderByAggregateInput: ["id", "name", "categories", "media", "description"],
    DashboardslidesSumOrderByAggregateInput: ["id"],
    DashboardjsonOrderByRelevanceInput: ["fields", "sort", "search"],
    DashboardjsonCountOrderByAggregateInput: ["id", "name", "url", "description", "definition", "format"],
    DashboardjsonAvgOrderByAggregateInput: ["id"],
    DashboardjsonMaxOrderByAggregateInput: ["id", "name", "url", "description", "definition", "format"],
    DashboardjsonMinOrderByAggregateInput: ["id", "name", "url", "description", "definition", "format"],
    DashboardjsonSumOrderByAggregateInput: ["id"],
    AgreementsOrderByRelevanceInput: ["fields", "sort", "search"],
    AgreementsCountOrderByAggregateInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsAvgOrderByAggregateInput: ["id"],
    AgreementsMaxOrderByAggregateInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsMinOrderByAggregateInput: ["id", "created_at", "name", "type", "author", "updated_at"],
    AgreementsSumOrderByAggregateInput: ["id"],
    BigIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableDateTimeFieldUpdateOperationsInput: ["set"],
    StringFieldUpdateOperationsInput: ["set"],
    NullableStringFieldUpdateOperationsInput: ["set"],
    NullableBoolFieldUpdateOperationsInput: ["set"],
    IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableDecimalFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    DecimalFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NestedBigIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "not"],
    NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "not"],
    NestedBigIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "not", "_count", "_min", "_max"],
    NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "search", "not", "_count", "_min", "_max"],
    NestedBoolNullableFilter: ["equals", "not"],
    NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedBoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    NestedDecimalNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDecimalNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedJsonNullableFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not"],
    NestedDecimalFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDecimalWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"]
};
function applyInputTypesEnhanceMap(inputTypesEnhanceMap) {
    for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
        const inputTypeName = inputTypeEnhanceMapKey;
        const typeConfig = inputTypesEnhanceMap[inputTypeName];
        const typeClass = inputTypes[inputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, inputsInfo[inputTypeName]);
    }
}
exports.applyInputTypesEnhanceMap = applyInputTypesEnhanceMap;
